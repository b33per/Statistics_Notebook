[{"title":"Experimental Design Notes","url":"326PaigesNotes.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Code Show All Code Hide All Code Experimental Design Notes (MATH 326) function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } Cheat Sheets R Colors RStudio Cheat Sheets R Base Commands Cheat Sheet Keyboard Shortcuts Don’t forget to always load your libraries and to Knit often!! library(mosaic) library(tidyverse) library(pander) library(DT) library(ggrepel) library(plotly) library(dplyr) library(ggplot2) library(maps) library(tmap) library(leaflet) library(htmltools) library(car) library(mosaicData) library(ResourceSelection) library(reshape2) library(RColorBrewer) library(scatterplot3d) library(readr) library(prettydoc) library(knitr) library(kableExtra) library(formattable) library(haven) This is the templet for the Hover Box Thingy Hover over words box! [insert description here]       …  Click to View Output. There are three parts to the help box: The starter code < a href=“javascript:showhide(‘[Insert classifying name]’)”> < div class=“hoverchunk” > The description code This is the pattern of the reoccurring code that you need to look out for when writing in the help box descriptions! < span class=“tooltipr” > [What shows up in the box] < span class=“tooltiprtext” > [The description that shows up when you hover] < /span>< /span > The ending code the r chunk you put right after will then show up after you click the help box! & nbsp;& nbsp;& nbsp;& nbsp; < span class=“tooltiprtext” >Press Enter to run the code. < /span> & nbsp;…& nbsp; < span class=“tooltiprtext” >Click to View Output.< /span > < /span > < /div > < /a > < div id=“[The classifying name that you put in the starter code!]” style=“display:none;” > *When using, make sure you fix all the spaces when using and use “< /div >” to show where the drop down is meant to end! Personal Notes OoOoooOOOoo let’s go assignments!! Weekly Assignments The sections below show the different Skill Quizzes and Class Activities done throughout the semester. As well as some personal notes on those assignments! Week 1 | Welcome to the Course & Introduction to RStudio We were setting up RStudio and doing cool little graphic thingys! Skill Quiz - Introduction to R // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); $(document).ready(function () { window.initializeCodeFolding(\"hide\" === \"show\"); }); $(document).ready(function () { // temporarily add toc-ignore selector to headers for the consistency with Pandoc $('.unlisted.unnumbered').addClass('toc-ignore') // move toc-ignore selectors from section div to header $('div.section.toc-ignore') .removeClass('toc-ignore') .children('h1,h2,h3,h4,h5').addClass('toc-ignore'); // establish options var options = { selectors: \"h1,h2,h3,h4,h5\", theme: \"bootstrap3\", context: '.toc-content', hashGenerator: function (text) { return text.replace(/[.\\\\/?&!#<>]/g, '').replace(/\\s/g, '_'); }, ignoreSelector: \".toc-ignore\", scrollTo: 0 }; options.showAndHide = true; options.smoothScroll = true; // tocify var toc = $(\"#TOC\").tocify(options).data(\"toc-tocify\"); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })(); "},{"title":"Applied Linear Regression Notes","url":"425PaigesNotes.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Code Show All Code Hide All Code Download Rmd Applied Linear Regression Notes (MATH 425) Cheat Sheets R Colors RStudio Cheat Sheets R Base Commands Cheat Sheet Keyboard Shortcuts Don’t forget to always load your libraries and to Knit often!! library(mosaic) library(tidyverse) library(pander) library(DT) library(ggrepel) library(plotly) library(dplyr) library(ggplot2) library(maps) library(tmap) library(leaflet) library(htmltools) library(car) library(mosaicData) library(ResourceSelection) library(reshape2) library(RColorBrewer) library(scatterplot3d) library(readr) library(prettydoc) library(knitr) library(kableExtra) library(formattable) library(haven) library(alr4) Personal Notes OoOoooOOOoo let’s go assignments!! LETS GOOOOO!!!! Hint: Don’t worry about fully getting the code, always make sure you are actively listening and watching up front. Weekly Assignments The sections below show the different Skill Quizzes and Class Activities done throughout the semester. As well as some personal notes on those assignments! Week 1 | Simple Linear Regression We were looking at “The Mathematical Model” and “Interpreting Model Parameters”! Wow! Skill Quiz - Simple Linear Regression Problem 1 Open the airquality dataset in R. Perform a regression of daily average Wind(\\(Y_i\\)) speed using the daily maximum Temperature (\\(X_i\\)) as the explanatory variable. Part (a) Type out the mathematical equation for this regression model and label both \\(Y\\) and \\(X\\) in the equation. \\[ \\underbrace{Y_i}_\\text{Wind} = \\beta_0 + \\beta_1 \\underbrace{X_i}_\\text{Temp} + \\epsilon_i \\quad \\text{where} \\ \\epsilon_i \\sim N(0,\\sigma^2) \\] Part (b) Fit and summarize a simple linear regression model for this data. # Type your code there templm <- lm(Wind ~ Temp, data=airquality) summary(templm) %>% pander()   Estimate Std. Error t value Pr(>|t|) (Intercept) 23.23 2.112 11 4.901e-21 Temp -0.1705 0.02693 -6.331 2.642e-09 Fitting linear model: Wind ~ Temp Observations Residual Std. Error \\(R^2\\) Adjusted \\(R^2\\) 153 3.142 0.2098 0.2045 Part (c) Type out the estimated equation for this regression model using your estimates found in part (b). \\[ \\hat{Y}_i = 23.234 + (-0.170)X_i \\] Part (d) Plot the data and the estimated regression model. # Type your code here ggplot(airquality, aes(x=Temp, y=Wind)) + geom_point(size=1.5, color=\"lightblue\", alpha= 0.5) + geom_smooth(method=\"lm\", formula=y~x, se=FALSE, size=0.5,color=\"skyblue\")+ theme_minimal() Part (e) Use your model to predict the average daily average Wind speed for an outside temperature of 72 degrees F. \\[ \\hat{Y}_i = 23.234 + (-0.170)(72) \\] # Type your code here 23.234 + (-0.170)*(72) ## [1] 10.994 Part (f) Write out an interpretation of the slope and intercept of your model. Are both meaningful for this data? Slope Interpretation: An increase of 1 degree F in the daily maximum Temperature(\\(X_i\\)) results in a 0.17 mph decrease in the average daily average Wind ($Y_i) speed. Is the slope meaningful?: Yes, the regression seems to be a good fit to this data and the slope is significant so the interpretation of the slope is meaningful for this data. Intercept Interpretation: When the daily maximum Temperature is 0 degrees F, the average daily average Wind speed is estimated to be 23.234 mph. Is the intercept meaningful?: Yes, the intercept is meaningful for this data because it is significant and an outside temperature of 0 degrees F is a meaningful situation. Problem 2 Open the mtcars dataset in R. Fit a regression model to the data that can be used to explain average gas mileage of a vehicle (mpg) (\\(Y_i\\)) using the weight (wt) (\\(X_i\\)) of the vehicle. Part (a) Type out the mathematical equation for this regression model and label both \\(Y\\) and \\(X\\) in the equation. \\[ \\underbrace{Y_i}_\\text{mpg} = \\beta_0 + \\beta_1 \\underbrace{X_i}_\\text{wt} + \\epsilon_i \\quad \\text{where} \\ \\epsilon_i \\sim N(0,\\sigma^2) \\] Part (b) Fit and summarize a simple linear regression model for this data. carslm <- lm(mpg ~ wt, data=mtcars) summary(carslm)%>%pander()   Estimate Std. Error t value Pr(>|t|) (Intercept) 37.29 1.878 19.86 8.242e-19 wt -5.344 0.5591 -9.559 1.294e-10 Fitting linear model: mpg ~ wt Observations Residual Std. Error \\(R^2\\) Adjusted \\(R^2\\) 32 3.046 0.7528 0.7446 Part (c) Type out the estimated equation for this regression model using your estimates found in part (b). \\[ \\hat{Y}_i = 37.29 + (-5.34)X_i \\] Part (d) Plot the data and the estimated regression model. # Type your code here ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point(size=1.5, color=\"lightblue\", alpha= 0.5) + geom_smooth(method=\"lm\", formula=y~x, se=FALSE, size=0.5,color=\"skyblue\")+ theme_minimal() Part (e) Use your model to predict the average gas mileage (mpg) for a vehicle that weighs 3,000 lbs. (Hint: ?mtcars) **Must convert 3000 lbs by dividing by 1000, thus it would make it 3* \\[ \\hat{Y}_i = 37.29 + (-5.34)(3) \\] ANSWER: # Type your code here 37.29 + (-5.34)*(3) ## [1] 21.27 Part (f) Write out an interpretation of the slope and intercept of your model. Are both meaningful for this data? Slope Interpretation: An increase of 1,000 lbs in the weight (\\(X_i\\)) of a vehicle results in a 5.34 mpg decrease in the average gas mileage of such vehicles(\\(Y_i\\)). Is the slope meaningful? : While the slope is significant, it only looks to be meaningful for vehicles that weigh between 2.5 thousand and 4 thousand pounds. Otherwise this regression does not seem to be a good fit for this data based on the scatterplot. Intercept Interpretation: The average gas mileage of vehicles that weigh nothing (0 lbs) is estimated to be 37.29 mpg. Is the intercept meaningful?: No, the intercept is not meaningful for this data because a vehicle with weight zero is not possible Before we can really trust the interpretation of and predictions from a regression model, there are important diagnostic checks to perform on the regression. These diagnostics are even more important to perform when p-values or confidence intervals are used as part of the analysis. In future weeks of this course, we will focus in greater detail on the technical details of regression: hypothesis tests, confidence intervals, and diagnostic checks. However, for the sake of completeness, the following problems have run through these technical details, even though we lack full understanding about them for the time being. Problem 3 Use your regression for the airquality data set in Problem 1 to complete the following “technical details” for this regression. Part (a) Create a (1) residuals vs. fitted-values plot, (2) Q-Q Plot of the residuals, and (3) residuals vs. order plot. # Type your code here par(mfrow=c(1,3)) plot(templm, which=1) qqPlot(templm$residuals, main=\"Q-Q Plot\",pch= 19, id=FALSE) plot(templm$residuals, ylab= \"Residuals\", main=\"Residuals vs Order\") Part (b) Explain, as best you understand currently, what each of these three plots show for this regression. Explanation: Everything looks pretty good. The residuals vs. fitted-values plot shows constant variance and a nice linear relation. The Q-Q Plot shows possible problems with normality because some dots go out of bounds, but is fairly good. The residuals vs. order plot shows no problems with time trends, so the error terms can be assumed to be independent. Part (c) Report the p-value for the test of these hypotheses for your regression. Intercept Hypotheses \\[ H_0: \\beta_0 = 0 \\quad \\text{vs.} \\quad H_a: \\beta_0 \\neq 0 \\] P-VALUE = < 2e-16 Slope Hypotheses \\[ H_0: \\beta_1 = 0 \\quad \\text{vs.} \\quad H_a: \\beta_1 \\neq 0 \\] P-VALUE = < 2.64e-09 Comment on whether or not we should trust each p-value based on your plots in Part (a). Should trust each p-value based on your plots in Part (a)? Intercept Hypotheses p-value? : Yes, it can be trusted because the diagnostic plots all checked out. Slope Hypotheses p-value? : Yes, it can be trusted because the diagnostic plots all checked out. Problem 4 Use your regression for the mtcars data set in Problem 2 to complete the following “technical details” for this regression. Part (a) Create a (1) residuals vs. fitted-values plot, (2) Q-Q Plot of the residuals, and (3) residuals vs. order plot. # Type your code here par(mfrow=c(1,3)) plot(carslm, which=1) qqPlot(carslm$residuals, main=\"Q-Q Plot\",pch= 19, id=FALSE) plot(carslm$residuals, ylab= \"Residuals\", main=\"Residuals vs Order\") Part (b) Explain, as best you understand currently, what each of these three plots show for this regression. Explanation: Everything looks somewhat questionable. The residuals vs. fitted-values plot shows a lack of linearity, which makes it hard to judge constant variance. The Q-Q Plot shows possible problems with normality because some dots go out of bounds, but is fairly good. The residuals vs. order plot shows a possible problem with time trends due to the slight rainbow pattern. Part (c) Report the p-value for the test of these hypotheses for your regression. Intercept Hypotheses \\[ H_0: \\beta_0 = 0 \\quad \\text{vs.} \\quad H_a: \\beta_0 \\neq 0 \\] P-VALUE = < 2e-16 Slope Hypot"},{"title":"Analysis Of Variance (ANOVA)","url":"ANOVA.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Code Show All Code Hide All Code Analysis Of Variance (ANOVA) function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } library(readr) An ANOVA is for testing the equality of several means simultaneously. A single quantitative response variable is required with one or more qualitative explanatory variables, i.e., factors. Note: A factor is defined as a qualitative variable containing at least two categories. The categories of the factor are referred to as the “levels” of the factor. One-way ANOVA Each experimental unit is assigned to exactly one factor-level combination. Another way to say this is “one measurement per individual” (no repeated measures) and “equal numbers of individuals per group”. Overview An ANOVA is only appropriate when all of the following are satisfied. The sample(s) of data can be considered to be representative of their population(s). The data is normally distributed in each group. (This can safely be assumed to be satisfied when the residuals from the ANOVA can be assumed to be normally distributed when seen in a Q-Q Plot.) The population variance of each group can be assumed to be the same. (This can be safely assumed to be satisfied when the residuals from the ANOVA show constant variance, i.e., are similarly vertically spread out in a Residuals versus fitted-values plot.) Hypotheses For a One-way ANOVA \\[ H_0: \\mu_1 = \\mu_2 = \\ldots = \\mu \\] \\[ H_a: \\mu_i \\neq \\mu \\ \\text{for at least one} \\ i \\] Mathematical Model A typical model for a one-way ANOVA is of the form \\[ Y_{ij} = \\mu_i + \\epsilon_{ij} \\] where \\(\\mu_i\\) is the mean for level (group) \\(i\\), and \\(\\epsilon_{ij} \\sim N(0,\\sigma^2)\\) is the error term for each point \\(j\\) within level (group) \\(i\\). R Instructions Console Help Command: ?aov() myaov is some name you come up with to store the results of the aov() test. Y must be a “numeric” vector of the quantitative response variable. X is a qualitative variable (should have class(X) equal to factor or character. If it does not, use as.factor(X) inside the aov(Y ~ as.factor(X),...) command. YourDataSet is the name of your data set. Perform the ANOVA myaov <- aov(Y ~ X, data=YourDataSet) summary(myaov) Diagnose ANOVA Assumptions par(mfrow=c(1,2)) plot(myaov, which=1:2) Example Code Hover your mouse over the example codes to learn more. Perform the ANOVA chick.aov <-  Saves the results of the ANOVA test as an object named ‘chick.aov’. aov( ‘aov()’ is a function in R used to perform the ANOVA. weight Y is ‘weight’, which is a numeric variable from the chickwts dataset.  ~  ‘~’ is the tilde symbol used to separate the Y and X in a model formula. feed, X is ‘feed’, which is a qualitative variable in the chickwts dataset, or more specifically, a factor with six levels: “casein”, “horsebean”, and so on… Use str(chickwts) to see this.  data = chickwts) ‘chickwts’ is a dataset in R. summary( ‘summary()’ shows the results of the ANOVA. chick.aov) ‘chick.aov’ is the name of the ANOVA.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  Click to View Output  Click to View Output. ## Df Sum Sq Mean Sq F value Pr(>F) ## feed 5 231129 46226 15.37 5.94e-10 ## Residuals 65 195556 3009 ## ## feed *** ## Residuals ## --- ## Signif. codes: ## 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 Diagnose the ANOVA par( ‘par’ is a R function that can be used to set or query graphical parameters. mfrow = c(1,2)) The mfrow parameter controls “multiple frames on a row”. In this case, the c(1,2) specifies 1 row of 2 plots. This will cause the two diagnostic plots to be placed side-by-side. plot( ‘plot’ is a R function for the plotting of R objects. chick.aov, ‘chick.aov’ is the name of the ANOVA.  which = 1:2) The which=1:2 selects “which” of 6 available plots we want to have graphed. In this case, 1 shows the Residuals vs Fitted, and 2 shows the Normal QQ-plot. Both are needed to check the ANOVA assumptions.  Click to View Output  Click to View Output. Explanation Analysis of variance (ANOVA) is often applied to the scenario of testing for the equality of three or more means from (possibly) separate normal distributions of data. The normality assumption is required. No matter the sample size. If the distributions are skewed then a nonparametric test should be applied instead of ANOVA. One-Way ANOVA One-way ANOVA is when a completely randomized design is used with a single factor of interest. A typical mathematical model for a one-way ANOVA is of the form \\[ Y_{ik} = \\mu_i + \\epsilon_{ik} \\quad (\\text{sometimes written}\\ Y_{ik} = \\mu + \\alpha_i + \\epsilon_{ik}) \\] where \\(\\mu_i\\) is the mean of each group (or level) \\(i\\) of a factor, and \\(\\epsilon_{ik}\\sim N(0,\\sigma^2)\\) is the error term. The plot below demonstrates what these symbols represent. Note that the notation \\(\\epsilon_{ik}\\sim N(0,\\sigma^2)\\) states that we are assuming the error term \\(\\epsilon_{ik}\\) is normally distributed with a mean of 0 and a standard deviation of \\(\\sigma\\). Hypotheses The aim of ANOVA is to determine which hypothesis is more plausible, that the means of the different distributions are all equal (the null), or that at least one group mean differs (the alternative). Mathematically, \\[ H_0: \\mu_1 = \\mu_2 = \\ldots = \\mu_m = \\mu \\] \\[ H_a: \\mu_i \\neq \\mu \\quad \\text{for at least one}\\ i\\in\\{1,\\ldots,m\\}. \\] In other words, the goal is to determine if it is more plausible that each of the \\(m\\) different samples (where each sample is of size \\(n\\)) came from the same normal distribution (this is what the null hypothesis claims) or that at least one of the samples (and possibly several or all) come from different normal distributions (this is what the alternative hypothesis claims). Visualizing the Hypotheses The first figure below demonstrates what a given scenario might look like when all \\(m=3\\) samples of data are from the same normal distribution. In this case, the null hypothesis \\(H_0\\) is true. Notice that the variability of the sample means is smaller than the variability of the points. The figure below shows what a given scenario might look like for \\(m=3\\) samples of data from three different normal distributions. In this case, the alternative hypothesis \\(H_a\\) is true. Notice that the variability of the sample means, i.e., \\((\\bar{x}_1,\\bar{x}_2,\\bar{x}_3)\\), is greater than the variability of the points. Explaining the Name The above plots are useful in understanding the mathematical details behind ANOVA and why it is called analysis of variance. Recall that variance is a measure of the spread of data. When data is very spread out, the variance is large. When the data is close together, the variance is small. ANOVA utilizes two important variances, the between groups variance and the within groups variance. Between groups variance–a measure of the variability in the sample means, the \\(\\bar{x}\\)’s. Within groups variance–a combined measure of the variability of the points within each sample. The plot below combines the information from the previous plots for ease of reference. It emphasizes the fact that when the null hypothesis is true, the points should have a large variance (be really spread out) while the sample means are relatively close together. On the other hand, when the points are relative close together within each sample and the sample means have a large variance (are really spread out) then the alternative hypothesis is true. This is the theory behind analysis of variance, or ANOVA. Calculating the Test Statistic, \\(F\\) The ratio of the “between groups variation” to the “within groups variation” provides the test statistic for ANOVA. Note that the test statistic of ANOVA is an \\(F\\) statistic. \\[ F = \\frac{\\text{Between groups variation}}{\\text{Within groups variation}} \\] It would be good to take a minute and review the \\(F\\) distribution. The \\(p\\)-value for ANOVA thus comes from an \\(F\\) distribution with parameters \\(p_1 = m-1\\) and \\(p_2 = n-m\\) where \\(m\\) is the number of samples and \\(n\\) is the total number of data points. A Deeper Look at Variance It is useful to take a few minutes and explain the word variance as well as mathematically define the terms “within group variance” and “between groups variance.” Variance is a statistical measure of the variability in data. The square root of the variance is called the standard deviation and is by far the more typical measure of spread. This is because standard deviation is easier to interpret. However, mathematically s"},{"title":"Chi-squared Tests","url":"ChiSquaredTests.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Chi-squared Tests function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } Association testing for two qualitative variables with at least two levels to each variable. Chi-squared Test of Independence Overview A method of comparing observed counts to the expected counts in a contingency table to decide if two qualitative variables are associated (alternative hypothesis) or are independent, i.e., not associated (null hypothesis). Typically, all expected counts are required to be 5 or greater for the test to be appropriate. However, the test is still appropriate if all expected counts are at least 1 and the average of the expected counts is at least 5. R Instructions Console Help Command: ?chisq.test() To Run the Test chisq.test(x) x must be a table or a matrix. To Make a Table If you have a data set that you want to turn into a table, use the table command. x The name of your created table to go in the chisq.test() code.  <-  This is the “left arrow” assignment operator that stores the results of your table() code into x. table( table is an R function used to tabulate how many times each value occrus in a given dataset. Dataset$FirstVariable, Use your dataset to call in a row variable.  Dataset$SecondVariable) Use your dataset to call in a column variable. x <- table(mtcars$am, mtcars$cyl) pander(x)   4 6 8 0 3 4 12 1 8 3 2 #Rename rows and columns of your table: rownames(x) <- c(\"Automatic\", \"Manual\") colnames(x) <- c(\"4 cyl\", \"6 cyl\", \"8 cyl\") pander(x)   4 cyl 6 cyl 8 cyl Automatic 3 4 12 Manual 8 3 2 Click open the example code above for details on how to rename rows and columns in a table. To Make a Matrix If you have tally counts of your observations, enter them into RStudio using a matrix. x The name of your created matrix to go in the chisq.test() code.  <-  This is the “left arrow” assignment operator that stores the results of your cbind() code into x. cbind( cbind stands for”column bind” and is a function that joins together different c() vectors to make them become columns of a table. `Farm 1` = The name of the first column you want in the matrix. To include spaces in the name, use the back-ticks ` and `.  c(Pigs = 10, Cats = 5, Dogs = 28, Roosters = 3), Specify each of the values by name in a c(…) function to be stored in your first column, in this case, Farm 1.  `Farm 2` = The name of the second column you want in the matrix.  c(Pigs = 15, Cats = 3, Dogs = 8, Roosters = 1) Each new column must contain entries for each named element. Technically, you can leave off the names in all but the first column as only the names from the first column will be used. pander(x) Print the matrix to the screen using pander(…).   Farm 1 Farm 2 Pigs 10 15 Cats 5 3 Dogs 28 8 Roosters 3 1 Or, notice how you could rbind instead with slightly different results… x The name of your created matrix to go in the chisq.test() code.  <-  This is the “left arrow” assignment operator that stores the results of your cbind() code into x. rbind( rbind stands for”row bind” and is a function that joins together different c() vectors to make them become rows of a table. `Farm 1` = The name of the first column you want in the matrix. To include spaces in the name, use the back-ticks ` and `.  c(Pigs = 10, Cats = 5, Dogs = 28, Roosters = 3), Specify each of the values by name in a c(…) function to be stored in your first column, in this case, Farm 1.  `Farm 2` = The name of the second column you want in the matrix.  c(Pigs = 15, Cats = 3, Dogs = 8, Roosters = 1) Each new column must contain entries for each named element. Technically, you can leave off the names in all but the first column as only the names from the first column will be used. pander(x) Print the matrix to the screen using pander(…).   Pigs Cats Dogs Roosters Farm 1 10 5 28 3 Farm 2 15 3 8 1 Diagnostics yourNamedTestResults This is some name you come up with that will become the R object that stores the results of your Chi-squated test chisq.test() command.  <-  This is the “left arrow” assignment operator that stores the results of your chisq.test() code into yourNamedTestResults. chisq.test( chisq.test() is an R function that stands for “Chi-Squared Test”. It performs the Chi-squared test for x. x) x is either a matrix or a table. Pearson’s Chi-squared test The name of the test being performed. data: x The data you are using for the Chi-Squared test. x is either a table or matrix that you created. X-squared = 9.2956, The test statistic of the test follows a chi-squared distribution with the given degrees of freedom. See the end of the “Making Inference” page of the book to learn more about the Chi-squared Parametric Distribution.  df = 3, The degrees of freedom of the test. It is found by (number of rows - 1)x(number of columns - 1)  p-value = 0.02561 The p-value of the test is found by computing the probability of being more extreme than given test statistic. In R, you can compute this yourself using the code pchisq(9.2956, 3, lower.tail=FALSE). yourNamedTestResults This is some name you come up with that will become the R object that stores the results of your Chi-squared test chisq.test() command. $ This allows you to access various elements from the test that was performed. expected The expected counts of the chi-squared test. These are computed for each observed count by using the equation (row tota)*(column total)/(total total). Pigs EXPLANATION.   Cats EXPLANATION.   Dogs EXPLANATION.   Roosters EXPLANATION. Farm 1 EXPLANATION.   15.753425 EXPLANATION.   5.041096 EXPLANATION. 22.68493 EXPLANATION. 2.520548 EXPLANATION. Farm 2 EXPLANATION.   9.246575 EXPLANATION.   2.958904 EXPLANATION. 13.31507 EXPLANATION. 1.479452 EXPLANATION. Interpretation: Pearson Residuals yourNamedTestResults This is some name you come up with that will become the R object that stores the results of your Chi-squated test chisq.test() command. $ This allows you to access various elements from the test that was performed. residuals This grabs the residuals for each observation in the Chi-squared test. Pigs EXPLANATION.   Cats EXPLANATION.   Dogs EXPLANATION.   Roosters EXPLANATION. Farm 1 EXPLANATION.   -1.449569 EXPLANATION.   -0.01830357 EXPLANATION. 1.115938 EXPLANATION. 0.3019936 EXPLANATION. Farm 2 EXPLANATION.   1.892065 EXPLANATION.   0.02389092 EXPLANATION. -1.456589 EXPLANATION. -0.3941801 EXPLANATION. Explanation To demonstrate the theory behind the Chi-squared Test, consider the following data about the survival of the Titanic passengers as a specific example. The rows of the following contingency table (a table of counts) show the Class of the passenger, while the columns show the Survival of the passenger. Note that each passenger is placed in exactly one Class and one level of Survival. Also, the two factors, Class and Survival, are qualitative variables with at least two levels. Thus, the data meets the basic requirements of the Chi-squared Test. No Yes 1st 122 203 2nd 167 118 3rd 528 178 Crew 673 212 The Hypotheses The hypotheses of the Chi-squared Test are written as verbal statements. \\(H_0\\): The row variable and column variable are independent. \\(H_a\\): The row variable and column variable are associated (not independent). For the Titanic data, these hypotheses would be written as \\(H_0\\): Class and Survival are independent. \\(H_a\\): Class and Survival are associated. The Model Recall that to obtain a \\(p\\)-value for a hypothesis test two things are required, 1) a test statistic, and 2) the distribution of the test statistic under the null hypothesis. The test statistic for the Chi-squared Test is given by the formula \\[ \\chi^2 = \\sum_{i=1}^m \\frac{(O_i - E_i)^2}{E_i} \\] where \\(O_i\\) represents each of the \\(m\\) observed counts and \\(E_i\\) represents the \\(m\\) expected counts. Note that \\(m = r\\times c\\), were \\(r\\) represents the number of rows in the contingency table and \\(c\\) represents the number of columns. The expected counts are obtained by the formula \\[ E_i = \\frac{\\text{(row total)(column total)}}{\\text{(total total)}} \\] The \\(\\chi^2\\) test statistic can be assumed to follow a chi-squared distribution with degrees of freedom \\(p = (r-1)\\times(c-1)\\) as long as the distribution of counts meets either of the following requirements. All expected counts are greater than five. OR All expected counts are greater than one, and the average of the expected counts is at least five. Where the \\(\\chi^2\\) statistic Comes From Consider the following graphic of the Titanic data. The data suggests that Survival of passengers appears to be associated with the Class of the passenger (the alternative hypothesis). This is due to the fact that more 1st class passengers survived than perished but far more 3rd class and Crew members perished than survived. It seems that the chances of survival were much greater for the 1st and 2nd class passengers than the 3rd class and Crew. Thus, survival appears to be associated with class. If the null hypothesis were true for the Titanic data"},{"title":"Data Sources","url":"DataSources.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Data Sources Kaggle UCI Machine Learning Repository U.S. Open Data Portal EU Open Data Portal Google Public Data Explorer U.S. Health Data // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })(); "},{"title":"Getting Started Tutorial","url":"GettingStartedTutorial.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Getting Started Tutorial function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } Student: “How do I learn R?” Teacher: “By using it.” Student: “But I don’t know how to use it.” Teacher: “Just try it anyway. Suddenly you’ll understand.” Most people that are new to using the “R Software” ask the question, “How do I learn R?” The answer is simple: “start using it.” Really. Seriously. Just start using it, even when you have no idea what you are doing, and suddenly you will start to learn R. So, here we go. The more you use it, the more you will know. This textbook (the “Statistics-Notebook”) follows a simple learning model: Hover your mouse over codeYes, just like that. By hovering over “Codes” you will get instructions on what that code does. to read about it. Click on a line of codeHovering is a good start, try clicking on this one. to see what it does. Try typing the code into RStudio yourself to actually start learning R. (This is the most important step! Avoid copying and pasting codes, and type them instead. The more you type codes yourself, even though it is slow and prone to mistakes, the more you will learn.) In summary, the most successful students in Math 325 follow the pattern: Example Codes For each of the following examples: (1) hover, (2) click, and (3) try. Before you begin working on these Example Codes, ensure you have RStudio open. It should look like this: Example 1 Remember, “Hover” the code first, then click, then try. View( The “View” R function (with a CAPTIAL ‘V’ in View) allows us to view a data set. When run, this function will open up a new tab in RStudio showing the data set. cars cars is a data set that is in R. R has datasets that are available for anyone to use. You can see them using the data() command. It would be good to explore View() for a few different datasets. ) Always be sure to end your function with closing parantheses.     Press Enter to run the code.  Click to Show Tutorial  Click to see a full tutorial on the “View()” command. Good work clicking on Example Code 1. But… Did you remember to first hover your mouse over the View(cars) example code? Good job if you did. If not, go do that right now before continuing. R allows you to work with data. So, the first step to understanding R is to open a dataset and begin exploring some data. If you type the data() command into your Console of RStudio you will see a list of “built in” data sets that come with R. Go ahead and type data() into your R Console (and then press Return or Enter) right now to try it yourself. The cars data set is one of the options that is available within the list from the data() command. This is a fun “historic” data set from the 1920’s. It shows the speed and stopping distance of cars from the 1920’s. To see the cars data set in RStudio, use the View command as follows. Step 1. Open RStudio. Step 2. Type the command View(cars) into your Console. Step 3. Press Enter or Return and the following output should appear within RStudio. Be sure to TRY IT yourself, if you haven’t already. Good work if you did. It’s the only way to learn R. Ask someone for help if you aren’t sure how to get started. Try View(airquality) as well. Example 2 mean( An R function “mean()” that will compute the mean of a quantitative column of data from a data set. cars cars is the name of a data set in R. Any data set can be used instead by simply typing the name of that data set instead of cars. $ The $ sign is a powerful operator in R. The $ sign allows you to access, or “purchase,” any column from a data set. Try typing cars$ into R and notice how a selection menu appears with options dist and speed. dist dist is one of the two columns from the cars data set. By typing cars$dist we are essentially pulling that column of data out of the data set, and then computing the mean of that column with mean(cars$dist). ) Closing parenthesis for the mean() function.     Press Enter to run the code.  Click to Show Output  Click to see output. Did you remember to first hover your mouse over the mean(cars$dist) example code? Good job if you did. If not, go do that right now before continuing. Recall that you “Viewed” the cars data set in the first example code. If you look carefully at this data set, you should notice that there are two columns labeled speed and dist in this data set. Each row of the data set represents a vehicle that was going a certain speed (in miles per hour) and once the breaks were applied, the distance the vehicle took to stop was also recorded (in feet). This data was recorded for 50 different vehicles. So it might make sense to compute something like the average (or mean) distance it took vehicles to stop. This is done with the mean( ) function. Notice how the $ sign is used to access a column called dist from the cars data set. Think of the data set cars as a store, and if you bring your money $ then you can “buy” the column dist from that data set. You may also be interested in trying any of the following: sd(cars$dist) var(cars$dist) median(cars$dist) min(cars$dist) max(cars$dist) length(cars$dist) sum(cars$dist) If you are curious, you can begin exploring the Numerical Summaries page of your Statistics-Notebook to learn more. But we won’t officially get to that as a class until later this week. So you don’t need to worry about it for now. Example 3 plot( The plot(...) function allows us to create a plot (usually a scatterplot) in R. dist dist is the name of a column from the cars data set. This is going to be the Y-variable of the plot. The Y-variable always comes first in the plot(Y ~ X) command.  ~  ~ is found on the upper-left key of your keyboard. It is called the “tilde” or “tilda” symbol. It is used to state a relationship between Y and X: Y ~ X. speed speed is the name of a column. This is going to be the X-variable of the plot. The X-variable always comes after the ~ in the plot(Y ~ X) command. ,  The comma , is used to separate each entry within a command. data=cars The data= statement is used to tell R which data set the columns of “dist” and “speed” come from. In this case, the cars data set. ,  The comma , is used to separate each entry within a command. col=“skyblue” The col= statement is used to tell R which color to use in the plot. Type colors() in your R Console to see what options there are. This code is using the \"skyblue\" color. Color names are always placed in quotes \" \". ,  The comma , is used to separate each entry within a command. pch=16 The pch= statement is used to tell R which plotting character to use in the plot. Type ?pch in your R Console to see what options there are. (You’ll need to scroll down in the help file that appears until you get to the 'pch values' section. ) Closing parenthesis for the plot(…) function.     Press Enter to run the code.  Click to Show Output  Click to View Output. Study the image below. Try changing the col=\"skyblue\" statement to col=\"firebrick\" instead. What do you notice? Try changing the pch=16 statement to pch=4 or any other number from 1 to 25. What do you notice? Hint: pressing the “up” arrow on your keyboard brings up the last command you typed into the Console. Good work! You’re all done for now. Completion Code: abc123R Return to the R Commands page of the Statistics-Notebook. This is “the end” of the Getting Started tutorial. To find the “completion code” you will need to study, and “click open” each of the example codes above. // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })(); "},{"title":"Graphical Summaries","url":"GraphicalSummaries.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Graphical Summaries function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } There are many ways to display data. The fundamental idea is that the graphical depiction of data should communicate the truth the data has to offer about the situation of interest. Histograms 1 Quantitative Variable Overview Great for showing the distribution of data for a single quantitative variable when the sample size is large. Dotplots are a good alternative for smaller sample sizes. Gives a good feel for the mean and standard deviation of the data. R Instructions Base R ggplot2 plotly To make a histogram in R use the function: hist(object) object must be quantitative data. R refers to this as a “numeric vector.” Usually this will be the column of a dataset accessed with the $ sign by hist(dataSetName$columnName). Type ?hist in your R Console to open the help file in R. Example Code Hover your mouse over the example codes to learn more. Click on them to see what they create. Basic histogram hist An R function “hist” used to create a histogram. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. $ The $ allows us to access any variable from the airquality dataset. Temp “Temp” is a quantitative variable (numeric vector) from the “airquality” dataset. )Closing parenthsis for the hist function.     Press Enter to run the code.  …  Click to View Output. Change Color hist(airquality$Temp,  This code was explained in the first example code. col=“skyblue” col= allows us to specify the color of the plot using a named color. The name of the color must be placed in quotations. Type “colors()” in R to see color options. ) Functions always end with a closing parenthesis.     Press Enter to run the code.  …  Click to View Output. Add Titles hist(airquality$Temp This part was explained in the first example code. ,  The comma allows us to specify optional commands to the function. The space after the comma is not required. It just looks nice. col=“skyblue”col= allows us to specify the color of the plot using a named color. The name of the color must be placed in quotations. Type “colors()” in R to see color options. ,  A comma must always be used to separate additional commands. xlab=“Temperature” xlab= stands for “x label.” Use it to specify the text to print on the plot under the x-axis. The desired text must always be in quotations. ,  A comma must always be used to separate additional commands. main=“La Guardia Airport Daily Mean Temperatures” main= lets us specify the “main” title to be placed above the plot. The desired text must always be placed in quotations. ) Functions must always end with a closing parenthesis.     Press Enter to run the code.  …  Click to View Output. To make a histogram in R using the ggplot approach, first ensure library(ggplot2) is loaded. Then, ggplot(data, aes(x=column)) +   geom_histogram() data is the name of your dataset. column is a column of data from your dataset that is quantitative. The aesthetic helper function aes(x= ) is how you tell the gpplot to make the x-axis become your column of data. The geometry helper function geom_histogram() causes the ggplot to become a histogram. Example Code Hover your mouse over the example codes to learn more. Click on them to see what they create. Basic Histogram ggplot An R function “ggplot” used to create a framework for a graphic that will have elements added to it with the + sign. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. ,  The comma allows us to specify optional commands to the function. The space after the comma is not required. It just looks nice. aes( The aes or “aesthetics” function allows you to tell the ggplot how it should appear. This includes things like what the x-axis or y-axis should become. x=Temp “x=” declares which variable will become the x-axis of the graphic. )Closing parenthsis for the aes function. )Closing parenthsis for the ggplot function.  +  The addition symbol + is used to add further elements to the ggplot.    geom_histogram() The “geom_histogram()” function causes the ggplot to become a histogram. There are many other “geom_” functions that could be used.     Press Enter to run the code.  …  Click to View Output. Change Bin Width and Color ggplot An R function “ggplot” used to create a framework for a graphic that will have elements added to it with the + sign. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. ,  The comma allows us to specify optional commands to the function. The space after the comma is not required. It just looks nice. aes( The aes or “aesthetics” function allows you to tell the ggplot how it should appear. This includes things like what the x-axis or y-axis should become. x=Temp “x=” declares which variable will become the x-axis of the graphic. )Closing parenthsis for the aes function. )Closing parenthsis for the ggplot function.  +  The addition symbol + is used to add further elements to the ggplot.    geom_histogram( The “geom_histogram()” function causes the ggplot to become a histogram. There are many other “geom_” functions that could be used. binwidth=5,  The “binwidth” command controls the width of the bars in the histogram. fill=“skyblue”, The “fill” command controls the color of the insides of each bar. color=“black” The “color” command controls the color of the edges of each bar. )Closing parenthsis for the geom_histogram function.     Press Enter to run the code.  …  Click to View Output. Add Titles ggplot An R function “ggplot” used to create a framework for a graphic that will have elements added to it with the + sign. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. ,  The comma allows us to specify optional commands to the function. The space after the comma is not required. It just looks nice. aes( The aes or “aesthetics” function allows you to tell the ggplot how it should appear. This includes things like what the x-axis or y-axis should become. x=Temp “x=” declares which variable will become the x-axis of the graphic. )Closing parenthsis for the aes function. )Closing parenthsis for the ggplot function.  +  The addition symbol + is used to add further elements to the ggplot.    geom_histogram( The “geom_histogram()” function causes the ggplot to become a histogram. There are many other “geom_” functions that could be used. binwidth=5,  The “binwidth” command controls the width of the bars in the histogram. fill=“skyblue”, The “fill” command controls the color of the insides of each bar. color=“black” The “color” command controls the color of the edges of each bar. )Closing parenthsis for the geom_histogram function.  +  The addition symbol + is used to add further elements to the ggplot.    labs( The “labs” function is used to add labels to the plot, like a main title, x-label and y-label. title=“La Guardia Airport Daily Mean Temperature”,  The “title=” command allows you to control the main title at the top of the graphic. x=“Temperature”,  The “x=” command allows you to control the x-label of the graphic. y=“Number of Days” The “y=” command allows you to control the y-label of the graphic. )Closing parenthsis for the labs function.     Press Enter to run the code.  …  Click to View Output. Gallery See some ideas from past students… Show/Hide Gallery Hover to see code. Copy the code into R. Play with it. Modify it to create your own graph. ggplot(airquality, aes(x = Temp)) + geom_histogram(binwidth=5, fill = \"skyblue\", color = \"black\") + labs(title = \"La Guardia Airport Daily Mean Temperature\",    x = \"Temperature\", y = \"Number of Days\") + theme_bw() + theme(plot.title = element_text(size = 14, face = \"bold\", hjust = .5),    panel.grid.major = element_line(color = \"grey80\")) ggplot(airquality) + geom_histogram(aes(x = Temp, fill = Temp > median(Temp)), color = \"black\", binwidth = 2) + labs(title = \"La Guardia Airport Daily Mean Temperature\",    x = \"Temperature\", y = \"Number of Days\") + theme_bw() + theme(plot.title = element_text(size = 14, face = \"bold\", hjust = .5),    panel.grid.major = element_line(color = \"grey80\"),    legend.position = \"none\") + geom_vline(xintercept = 72, linetype ="},{"title":"Statistics Notebook","url":"index.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Code Show All Code Hide All Code Statistics Notebook This page, and all pages of this notebook, are meant to be customized to become a useful Guide to Statistical Analysis in R for your current and future self. function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } Sections Paige’s Notes : Notes taken throughout different statistic based classes. R Help : R Studio commands, structuring tips, and tricks. Describing Data : R Studio commands for graphically and numerically describing data. Making Inference : Deep dives into the different statistical tests. Analyses : Statistical analyses that utilizes the tools of collecting, analyzing, and interpreting data to result in informed decision-making. function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } Search Bar Search Bar Loading index… document.addEventListener('DOMContentLoaded', function () { const INDEX_URL = \"search-index.json\"; // Simple path since it's in same directory const qEl = document.getElementById('q'); const statusEl = document.getElementById('status'); const resultsEl = document.getElementById('results'); let miniSearch = null; function render(results) { if (!results || results.length === 0) { resultsEl.innerHTML = ''; statusEl.textContent = qEl.value.trim() ? 'No matches found' : 'Type to search...'; return; } resultsEl.innerHTML = results.slice(0, 8).map(r => ` <li style=\"margin:10px 0;padding:8px;border:1px solid #ddd;border-radius:4px;\"> <a href=\"${r.url}\" style=\"font-weight:bold;color:#0066cc;\">${r.title}<\/a><br/> <small style=\"color:#666;\">${r.url}<\/small> <\/li>`).join(''); statusEl.textContent = `${results.length} result(s) found`; } async function loadIndex() { try { const response = await fetch(INDEX_URL); if (!response.ok) throw new Error(`HTTP ${response.status}`); const docs = await response.json(); miniSearch = new MiniSearch({ fields: [\"title\", \"content\"], storeFields: [\"title\", \"url\"] }); miniSearch.addAll(docs.map((d, i) => ({ id: i, title: d.title || \"\", url: d.url, content: d.content || \"\" }))); statusEl.textContent = `Ready to search ${docs.length} pages`; } catch (e) { statusEl.textContent = `Error: ${e.message}`; console.error(\"Search index error:\", e); } } function doSearch() { const query = qEl.value.trim(); if (!miniSearch || !query) { render([]); return; } const results = miniSearch.search(query, { prefix: true, fuzzy: 0.2 }); render(results); } qEl.addEventListener('input', doSearch); loadIndex(); }); Table of Contents These are the statistical tools used to explore and interpret different data types. One Quantitative Response Variable Y Graphics Y is a single quantitative variable of interest. This would be like “heights” of BYU-Idaho students. Test(s) used for this category: One Sample T-test Paired Sample T-test Wilcoxon Signed- Rank Test Used for one quantitative variable. Pretty simple tbh. Questions that this answers: How long are 4th grader’s feet? What is the average length of feet in the KidsFeet dataset? These are the best graphics to use: Examples : What is the mean temperature at Airport? (One Sample) can be done with histogram or dot plot! plot_ly(airquality, x=~Temp, type=\"histogram\", marker=list(color=\"skyblue\", line=list(color=\"darkgray\", width=10))) %>% layout(title=\"La Guardia Airport Daily Mean Temperatures\", xaxis=list(title=\"Temperature in Degrees F\")) {\"x\":{\"visdat\":{\"30a81ac66a5f\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"30a81ac66a5f\",\"attrs\":{\"30a81ac66a5f\":{\"x\":{},\"marker\":{\"color\":\"skyblue\",\"line\":{\"color\":\"darkgray\",\"width\":10}},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"histogram\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"La Guardia Airport Daily Mean Temperatures\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Temperature in Degrees F\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[67,72,74,62,56,66,65,59,61,69,74,69,66,68,58,64,66,57,68,62,59,73,61,61,57,58,57,67,81,79,76,78,74,67,84,85,79,82,87,90,87,93,92,82,80,79,77,72,65,73,76,77,76,76,76,75,78,73,80,77,83,84,85,81,84,83,83,88,92,92,89,82,73,81,91,80,81,82,84,87,85,74,81,82,86,85,82,86,88,86,83,81,81,81,82,86,85,87,89,90,90,92,86,86,82,80,79,77,79,76,78,78,77,72,75,79,81,86,88,97,94,96,94,91,92,93,93,87,84,80,78,75,73,81,76,77,71,71,78,67,76,68,82,64,71,81,69,63,70,77,75,76,68],\"marker\":{\"color\":\"skyblue\",\"line\":{\"color\":\"darkgray\",\"width\":10}},\"type\":\"histogram\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}stripchart(airquality$Temp, method=\"stack\", xlab= \"Temperature (F)\", main=\"La Guardia Airport Daily Mean Temperature\") You can change the method to “overplot”, “jitter”, or “stack” What is the median temperature of La Guardia Airport? (One Sample) boxplot (airquality$Temp, ylab=\"Temperature (F)\", main=\"La Guardia Airport Temperature Median\") Tests One Sample t Test A one sample t test is used when there is a hypothesized value for the population mean \\(\\mu\\) of a single quantitative variable. Overview Questions The one sample t test can be used to answer questions like: How long does it take to drive from Rexburg, ID to Salt Lake City, UT on average? Is human body temperature really 98.6&deg; F on average? Do I spend less than $3 a day,on average, purchasing snacks? Requirements This test is only appropriate when both of the following are satisfied. The sample is representative of the population. (Having a simple random sample is the best way to do this.) The sampling distribution of the sample mean \\(\\bar{x}\\) can be assumed to be normal. This is a safe assumption when either: the population data can be assumed to be normally distributed using a Q-Q Plot OR the size of the sample (n) that was taken from the population is large (at least n > 30, but “large” really depends on how badly the data is skewed). If the requirements listed above are satisfied, then the results of the test can be trusted to give meaningful inference about the population. If the requirements are not met, then that doesn’t mean the results of the test are necessarily bad, but there is no guarantee that they are good. Hypotheses Math Code $$ H_0: \\mu = 5.2 $$ $$ H_a: \\mu \\neq 5.2 $$ \\(H_0: \\mu = \\text{some number}\\) \\(H_a: \\mu \\ \\left\\{\\underset{<}{\\stackrel{>}{\\neq}}\\right\\} \\ \\text{some number}\\) Examples: analysis resubmits R Instructions Console Help Command: ?t.test() t.test(NameOfYourData$Y, mu = YourNull, alternative = YourAlternative, conf.level = 0.95) NameOfYourData is the name of your data set, like mtcars or KidsFeet. Y must be a “numeric” vector of quantitative data. YourNull is the numeric value from your null hypothesis for \\(\\mu\\). YourAlternative is one of the three options: \"two.sided\", \"greater\", \"less\" and should correspond to your alternative hypothesis. The value for conf.level = 0.95 can be changed to any desired confidence level, like 0.90 or 0.99. It should correspond to \\(1-\\alpha\\). Testing Assumptions library(car) qqPlot(NameOfYourData$Y) Example Code Hover your mouse over the example codes to learn more. t.test( ‘t.test’ is an R function that performs one and two sample t-tests. mtcars ‘mtcars’ is a dataset. Type ‘View(mtcars)’ in R to view the dataset. $ The $ allows us to access any variable from the mtcars dataset. mpg,  ‘mpg’ is Y, a quantitative variable (numeric vector) from the mtcars dataset. mu = 20,  The numeric value from the"},{"title":"Kruskal-Wallis Test","url":"Kruskal.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Kruskal-Wallis Test function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } The nonparametric equivalent to one-way ANOVA. Kruskal-Wallis Rank Sum Test Allows for deciding if several samples come from the same population or if at least one sample comes from a different population. Overview It is assumed that the various populations are of approximately the same form, but are shifted or translated. Can also be used when data is ordered (ordinal) but does not have an exact measurement. Best used when the distribution of the data is not normal. ANOVA is appropriate when the data is normal. Hypotheses Typically, the hypotheses of the Kruskal-Wallis test are: \\[ H_0: \\text{All samples are from the same distribution.} \\] \\[ H_a: \\text{At least one sample's distribution is stochastically different.} \\] However, according to the original authors, what the alternative to the Kruskal-Wallis test really is, “is a tendency for observations in at least one of the populations to be larger (or smaller) than all the observations together, when paired randomly. In many cases, this is practically equivalent to the mean of at least one population differing from the others.” Thus, it could also be appropriate to use the ANOVA style hypotheses \\[ H_0: \\mu_1 = \\mu_2 = \\ldots = \\mu \\] \\[ H_a: \\mu_i \\neq \\mu \\ \\text{for at least one} \\ i \\] R Instructions Console Help Command: ?kruskal.test() kruskal.test(x ~ g, data=YourDataSet) x is a numeric vector of data values that represents the quantatitive response variable. g is a qualitative grouping variable defining which groups each value in x belongs to. It must either be a character vector or a factor vector. YourDataSet is the name of your data set. Example Code Hover your mouse over the example codes to learn more. kruskal.test( The function that performs a Kruskal-Wallis rank sum test. weight ‘weight’ is a numeric variable from the chickwts dataset that represents the quantatitive response variable.  ~  ‘~’ is the tilde symbol used to separate the left- and right-hand side in a model formula. feed, ‘feed’ is a qualitative grouping variable in the chickwts dataset.  data = chickwts) ‘chickwts’ is a dataset in R.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  Click to View Output  Click to View Output. ## ## Kruskal-Wallis rank sum test ## ## data: weight by feed ## Kruskal-Wallis chi-squared = 37.343, df = 5, ## p-value = 5.113e-07 Alternatively, you could use the following approach as well. kruskal.test(list(x, y, z)) x is a numeric vector of data values that represents the quantatitive response variable for the first group. y is a numeric vector of data values that represents the quantatitive response variable for the second group. z is a numeric vector of data values that represents the quantatitive response variable for the third group. Note that more than three vectors of data could be included inside of list(). Example Code Hover your mouse over the example codes to learn more. feed1 <- filter(chickwts, feed == “horsebean”) This splits out the first group of feed (horsebean) from the chickwts dataset. feed2 <- filter(chickwts, feed == “linseed”) This splits out the second group of feed (linseed) from the chickwts dataset. feed3 <- filter(chickwts, feed == “soybean”) This splits out the third group of feed (soybean) from the chickwts dataset. feed4 <- filter(chickwts, feed == “sunflower”) This splits out the fourth group of feed (sunflower) from the chickwts dataset. feed5 <- filter(chickwts, feed == “meatmeal”) This splits out the fifth group of feed (meatmeal) from the chickwts dataset. feed6 <- filter(chickwts, feed == “casein”) This splits out the sixth group of feed (casein) from the chickwts dataset. kruskal.test( The function that performs a Kruskal-Wallis rank sum test. list(feed1$weight,feed2$weight,feed3$weight,feed4$weight,feed5$weight,feed6$weight)) A list of numeric vecotrs that represent the quantitative response variable for each group.  Click to View Output  Click to View Output. Load library(tidyverse) to run this code in R. ## ## Kruskal-Wallis rank sum test ## ## data: list(feed1$weight, feed2$weight, feed3$weight, feed4$weight, feed5$weight, feed6$weight) ## Kruskal-Wallis chi-squared = 37.343, df = 5, ## p-value = 5.113e-07 Explanation In many cases it is of interest to perform a hypothesis test about whether or not several samples come from the same population. The Kruskal-Wallis Rank Sum Test allows for this by extending the idea behind the Wilcoxon Rank Sum Test to allow for more than two samples. The following explanation of how the test works comes mainly from the original 1952 article, Use of Ranks in One-Criterion Variance Analysis, 1952, but is expanded here for increased clarity. Calculating the Test Statistic The following artificial data will be used to demonstrate how the Kruskal-Wallis Test statistic is calculated. (Taken from the original article.) Daily Bottle-Cap Production of Three Machines (Artificial data.) Standard Modification1 Modification2 340 339 347 345 333 343 330 344 349 342 355 338 Step 1: Obtain \\(C\\) samples, each of size \\(n_i\\). Note that the notation \\(n_i\\) allows for each sample to be a different size. In the bottle-cap data, \\(C=3\\) and \\(n_1 = 5\\), \\(n_2 = 3\\), and \\(n_3 = 4\\). Step 2: Order the \\(N=n_1 + \\cdots + n_C\\) values from all samples from smallest to largest. Rank the values from smallest to largest with the ranks \\(1,\\ldots,N\\). Award any tied values the average of the ranks of those values that are tied. In the bottle-cap data we have the following. Rank 1 2 3 4 5 6 7 8 9 10 11 12 Value 330 333 338 339 340 342 343 344 345 347 349 355 Machine S M1 S M1 S S M2 M1 S M2 M2 M2 Step 3: Sum the ranks for each sample. Denote the sum of the ranks for sample \\(i\\) by \\(R_i\\). In the bottle-cap data, \\(R_1 = 1 + 3 + 5 + 6 + 9 = 24\\) \\(R_2 = 2 + 4 + 8 = 14\\) \\(R_3 = 7 + 10 + 11 + 12 = 40\\) Step 4: Compute the mean rank for each sample, \\(\\bar{R_i} = \\frac{R_i}{n_i}\\). In the bottle-cap data, \\(\\bar{R}_1 = \\frac{R_1}{n_1} = \\frac{24}{5} = 4.8\\) \\(\\bar{R}_2 = \\frac{R_2}{n_2} = \\frac{14}{3} = 4.667\\) \\(\\bar{R}_3 = \\frac{R_3}{n_3} = \\frac{40}{4} = 10.0\\) Step 5: If there are no ties, calculate the test statistic \\(H\\) by the formula \\[ H = \\frac{N-1}{N}\\sum_{i=1}^C \\frac{n_i[\\bar{R}_i-\\frac{1}{2}(N+1)]^2}{\\frac{1}{12}(N^2-1)} \\] See the original article for the formula to use when there are ties present in the data. In the bottle-cap data, \\(H = 5.656\\). To understand the logic behind the test statistic \\(H\\), note that the null hypothesis assumes that each of the \\(C\\) samples are taken from the same population. Under this assumption, the ranks assigned to each sample should represent a uniform sample of the ranks \\(1,\\ldots,N\\). If the null hypothesis were true, we would expect the average of the ranks from each group, the \\(\\bar{R}_i\\), to be roughly about the same. More precisely, using the properties of the discrete uniform distribution (see wikipedia), we expect each \\(\\bar{R}_i\\) to be close to \\(\\frac{1}{2}(N+1)\\), which is the mean of the discrete uniform distribution. That \\(\\bar{R}_i\\) should be close to this value comes from the fact that the mean of a distribution of means is equal to the population mean. Further, the variance of \\(\\bar{R}_i\\) is given by the population variance, \\(\\frac{1}{12}(N^2-1)\\) in this case, divided by the sample size \\(n_i\\). Finally, the \\(\\frac{N-1}{N}\\) is a correction factor that will not be explained here. The full article explains the details about how a multivariate normal distribution is used to uncover the formula for \\(H\\). Thus, understanding \\(H\\) completely will require an advanced degree in statistical theory. However, the short story is that the distribution of the test statistic \\(H\\) is approximately a chi squared distribution with \\(C-1\\) degrees of freedom and has the form of a sum of values consisting of the (observed mean - expected mean)^2/(variance of the observed mean). Step 6: Calculate the p-value of \\(H\\) using a chi squared distribution with \\(C-1\\) degrees of freedom. \\[ H = \\frac{N-1}{N}\\sum_{i=1}^C \\frac{n_i[\\bar{R}_i-\\frac{1}{2}(N+1)]^2}{\\frac{1}{12}(N^2-1)} \\] In the bottle-cap data, \\(p = 0.059\\), which represents the probability of \\(H\\) being as extreme or more extreme than the observed value of 5.656, assuming the null hypothesis is true. Examples: wages, pigweights // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/ja"},{"title":"Linear Regression","url":"LinearRegression.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Code Show All Code Hide All Code Linear Regression function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } Determine which explanatory variables have a significant effect on the mean of the quantitative response variable. Simple Linear Regression Simple linear regression is a good analysis technique when the data consists of a single quantitative response variable \\(Y\\) and a single quantitative explanatory variable \\(X\\). Overview Mathematical Model The true regression model assumed by a regression analysis is given by Math Code $$ \\underbrace{Y_i}_\\text{Some Label} = \\overbrace{\\beta_0}^\\text{y-int} + \\overbrace{\\beta_1}^\\text{slope} \\underbrace{X_i}_\\text{Some Label} + \\epsilon_i \\quad \\text{where} \\ \\epsilon_i \\sim N(0, \\sigma^2) $$ \\(Y_i\\) The response variable. The “i” denotes that this is the y-value for individual “i”, where “i” is 1, 2, 3,… and so on up to \\(n\\), the sample size. \\(=\\) This states that we are assuming \\(Y_i\\) was created, or is “equal to” the formula that will follow on the right-hand-side of the equation. \\(\\underbrace{\\overbrace{\\beta_0}^\\text{y-intercept} + \\overbrace{\\beta_1}^\\text{slope} X_i \\ }_\\text{true regression relation}\\) The true regression relation is a line, a line that is typically unknown in real life. It can be likened to “God’s Law” or “Natural Law”. Something that governs the way the data behaves, but is unkown to us. \\(+\\) This plus sign emphasizes that the actual data, the \\(Y_i\\), is created by adding together the value from the true line \\(\\beta_0 + \\beta_1 X_i\\) and an individual error term \\(\\epsilon_i\\), which allows each dot in the regression to be off of the line by a certain amount called \\(\\epsilon_i\\). \\(\\overbrace{\\epsilon_i}^\\text{error term}\\) Error term for each individual \\(i\\). The error terms are “random” and unique for each individual. This provides the statistical relationship of the regression. It is what allows each dot to be different, while still coming from the same line, or underlying law. \\(\\quad \\text{where}\\) Some extra comments are needed about \\(\\epsilon_i\\)… \\(\\ \\overbrace{\\epsilon_i \\sim N(0, \\sigma^2)}^\\text{error term normally distributed}\\) The error terms \\(\\epsilon_i\\) are assumed to be normally distributed with constant variance. Pay special note that the \\(\\sigma\\) does not have an \\(i\\) in it, so it is the same for each individual. In other words, the variance is constant. The mean of the errors is zero, which causes the dots to be spread out symmetrically both above and below the line. The estimated regression line obtained from a regression analysis, pronounced “y-hat”, is written as Math Code $$ \\underbrace{\\hat{Y}_i}_\\text{Some Label} = \\overbrace{b_0}^\\text{est. y-int} + \\overbrace{b_1}^\\text{est. slope} \\underbrace{X_i}_\\text{Some Label} $$ \\(\\hat{Y}_i\\) The estimated average y-value for individual \\(i\\) is denoted by \\(\\hat{Y}_i\\). It is important to recognize that \\(Y_i\\) is the actual value for individual \\(i\\), and \\(\\hat{Y}_i\\) is the average y-value for all individuals with the same \\(X_i\\) value. \\(=\\) The formula for the average y-value, \\(\\hat{Y}_i\\) is equal to what follows… \\(\\underbrace{\\overbrace{\\ b_0 \\ }^\\text{y-intercept} + \\overbrace{b_1}^\\text{slope} X_i \\ }_\\text{estimated regression relation}\\) Two things are important to notice about this equation. First, it uses \\(b_0\\) and \\(b_1\\) instead of \\(\\beta_0\\) and \\(\\beta_1\\). This is because \\(b_0\\) and \\(b_1\\) are the estimated y-intercept and slope, respectively, not the true y-intercept \\(\\beta_0\\) and true slope \\(\\beta_1\\). Second, this equation does not include \\(\\epsilon_i\\). In other words, it is the estimated regression line, so it only describes the average y-values, not the actual y-values. Note: see the Explanation tab The Mathematical Model for details about these equations. Hypotheses Math Code $$ \\left.\\begin{array}{ll} H_0: \\beta_1 = 0 \\\\ H_a: \\beta_1 \\neq 0 \\end{array} \\right\\} \\ \\text{Slope Hypotheses} $$ $$ \\left.\\begin{array}{ll} H_0: \\beta_0 = 0 \\\\ H_a: \\beta_0 \\neq 0 \\end{array} \\right\\} \\ \\text{Intercept Hypotheses} $$ \\[ \\left.\\begin{array}{ll} H_0: \\beta_1 = 0 \\\\ H_a: \\beta_1 \\neq 0 \\end{array} \\right\\} \\ \\text{Slope Hypotheses}^{\\quad \\text{(most common)}}\\quad\\quad \\] \\[ \\left.\\begin{array}{ll} H_0: \\beta_0 = 0 \\\\ H_a: \\beta_0 \\neq 0 \\end{array} \\right\\} \\ \\text{Intercept Hypotheses}^{\\quad\\text{(sometimes useful)}} \\] If \\(\\beta_1 = 0\\), then the model reduces to \\(Y_i = \\beta_0 + \\epsilon_i\\), which is a flat line. This means \\(X\\) does not improve our understanding of the mean of \\(Y\\) if the null hypothesis is true. If \\(\\beta_0 = 0\\), then the model reduces to \\(Y_i = \\beta_1 X + \\epsilon_i\\), a line going through the origin. This means the average \\(Y\\)-value is \\(0\\) when \\(X=0\\) if the null hypothesis is true. Assumptions This regression model is appropriate for the data when five assumptions can be made. Linear Relation: the true regression relation between \\(Y\\) and \\(X\\) is linear. Normal Errors: the error terms \\(\\epsilon_i\\) are normally distributed with a mean of zero. Constant Variance: the variance \\(\\sigma^2\\) of the error terms is constant (the same) over all \\(X_i\\) values. Fixed X: the \\(X_i\\) values can be considered fixed and measured without error. Independent Errors: the error terms \\(\\epsilon_i\\) are independent. Note: see the Explanation tab Residual Plots & Regression Assumptions for details about checking the regression assumptions. Interpretation The slope is interpreted as, “the change in the average y-value for a one unit change in the x-value.” It is not the average change in y. It is the change in the average y-value. The y-intercept is interpreted as, “the average y-value when x is zero.” It is often not meaningful, but is sometimes useful. It just depends if x being zero is meaningful or not within the context of your analysis. For example, knowing the average price of a car with zero miles is useful. However, pretending to know the average height of adult males that weigh zero pounds, is not useful. R Instructions Console Help Command: ?lm() Perform the Regression mylm This is some name you come up with that will become the R object that stores the results of your linear regression lm(...) command.  <-  This is the “left arrow” assignment operator that stores the results of your lm() code into mylm name. lm( lm(…) is an R function that stands for “Linear Model”. It performs a linear regression analysis for Y ~ X. Y  Y is your quantitative response variable. It is the name of one of the columns in your data set. ~  The tilde symbol ~ is used to tell R that Y should be treated as the response variable that is being explained by the explanatory variable X. X, X is the quantitative explanatory variable (at least it is typically quantitative but could be qualitative) that will be used to explain the average Y-value.  data = NameOfYourDataset NameOfYourDataset is the name of the dataset that contains Y and X. In other words, one column of your dataset would be your response variable Y and another column would be your explanatory variable X. ) Closing parenthesis for the lm(…) function. summary(mylm) The summary command allows you to print the results of your linear regression that were previously saved in mylm name.  Click to Show Output  Click to View Output. Example output from a regression. Hover each piece to learn more. Call: lm(formula = dist ~ speed, data = cars) This is simply a statement of your original lm(…) “call” that you made when performing your regression. It allows you to verify that you ran what you thought you ran in the lm(…). Residuals: Residuals are the vertical difference between each point and the line, \\(Y_i - \\hat{Y}_i\\). The residuals are supposed to be normally distributed, so a quick glance at their five-number summary can give us insight about any skew present in the residuals. min   -29.069 “min” gives the value of the residual that is furthest below the regression line. Ideally, the magnitude of this value would be about equal to the magnitude of the largest positive residual (the max) because the hope is that the residuals are normally distributed around the line. 1Q   -9.525 “1Q” gives the first quartile of the residuals, which will always be negative, and ideally would be about equal in magnitude to the third quartile. Median   -2.272 “Median” gives the median of the residuals, which would ideally would be about equal to zero. Note that because the regression line is the least squares line, the"},{"title":"Logistic Regression","url":"LogisticRegression.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Logistic Regression function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } Regression for a qualitative binary response variable \\((Y_i = 0\\) or \\(1)\\). The explanatory variables can be either quantitative or qualitative. Simple Logistic Regression Model Regression for a qualitative binary response variable \\((Y_i = 0\\) or \\(1)\\) using a single (typically quantitative) explanatory variable. Overview The probability that \\(Y_i = 1\\) given the observed value of \\(x_i\\) is called \\(\\pi_i\\) and is modeled by the equation Math Code $$ P(Y_i = 1|\\, x_i) = \\frac{e^{\\beta_0 + \\beta_1 x_i}}{1+e^{\\beta_0 + \\beta_1 x_i}} = \\pi_i $$ \\(P(\\) The “P” stands for “Probability that…” \\(Y_i\\) The response variable. The “i” denotes that this is the y-value for individual “i”, where “i” is 1, 2, 3,… and so on up to \\(n\\), the sample size. \\(= 1\\) Equals 1… This states that we are assuming that the probability that the response variable \\(Y_i\\) is a 1 for the current individual. \\(| x_i)\\) Given \\(x_i\\)… in other words, the “|” says “given” and \\(x_i\\) means the x-value of the current individual. \\(=\\) Equals sign. \\(\\displaystyle\\frac{e^{\\beta_0 + \\beta_1 x_i}}{1 + e^{\\beta_0 + \\beta_1 x_i}}\\) The logistic regression equation where \\(e=2.71828...\\) is the “natural constant” number and \\(\\beta_0\\) is the y-intercept and \\(\\beta_1\\) is teh slope. \\(= \\pi_i\\) The \\(\\pi_i\\) stands for the probability of individual \\(i\\) having a y-value equal to 1 given their \\(x_i\\) value. It is the short hand notation for \\(P(Y_i = 1 |x_i)\\). (It is NOT the number 3.14…) The coefficents \\(\\beta_0\\) and \\(\\beta_1\\) are difficult to interpret directly. Typicall \\(e^{\\beta_0}\\) and \\(e^{\\beta_1}\\) are interpreted instead. The value of \\(e^{\\beta_0}\\) or \\(e^{\\beta_1}\\) denotes the relative change in the odds that \\(Y_i=1\\). The odds that \\(Y_i=1\\) are \\(\\frac{\\pi_i}{1-\\pi_i}\\). Examples: challenger | mouse R Instructions Console Help Command: ?glm() Perform a Logistic Regression YourGlmName This is some name you come up with that will become the R object that stores the results of your logistic regression glm() command.  <-  This is the “left arrow” assignment operator that stores the results of your glm() code into YourGlmName. glm( glm( is an R function that stands for “General Linear Model”. It works in a similar way that the lm( function works except that it requires a family= option to be specified at the end of the command. Y  Y is your binary response variable. It must consist of only 0’s and 1’s. Since TRUE’s = 1’s and FALSE’s = 0’s in R, Y could be a logical statement like (Price > 100) or (Animal == “Cat”) if your Y-variable wasn’t currently coded as 0’s and 1’s. ~  The tilde symbol ~ is used to tell R that Y should be treated as a function of the explanatory variable X. X, X is the explanatory variable (typically quantitative) that will be used to explain the probability that the response variable Y is a 1.  data = NameOfYourDataset,NameOfYourDataset is the name of the dataset that contains Y and X. In other words, one column of your dataset would be called Y and another column would be called X.  family=binomial) The family=binomial command tells the glm( function to perform a logistic regression. It turns out that glm can perform many different types of regressions, but we only study it as a tool to perform a logistic regression in this course. summary(YourGlmName) The summary command allows you to print the results of your logistic regression that were previously saved in YourGlmName. Example output from a regression. Hover each piece to learn more. Call: glm(formula = am ~ disp, family = binomial, data = mtcars) This is simply a statement of your original glm(…) “call” that you made when performing your regression. It allows you to verify that you ran what you thought you ran in the glm(…). Deviance Residuals: Deviance residuals are a measure of how far the fitted probability for \\(\\pi_i\\) has differed from the actual outcome of \\(Y_i\\) in terms of the log of the fitted probability space. (This is a fairly complicated idea.) Min   -1.5651 “min” gives the value of the residual that is furthest below the regression line. Ideally, the magnitude of this value would be about equal to the magnitude of the largest positive residual (the max) because the hope is that the residuals are normally distributed around the line. 1Q   -0.6648 “1Q” gives the first quartile of the residuals, which will always be negative, and ideally would be about equal in magnitude to the third quartile. Median   -0.2460 “Median” gives the median of the residuals, which would ideally would be about equal to zero. Note that because the regression line is the least squares line, the mean of the residuals will ALWAYS be zero, so it is never included in the output summary. This particular median value of -0.2460 is a little smaller than zero than we would hope for and suggests a right skew in the data because the mean (0) is greater than the median (-0.2460) witnessing the residuals are right skewed. This can also be seen in the maximum being much larger in magnitude than the minimum. 3Q   0.7276 “3Q” gives the third quartile of the residuals, which would ideally would be about equal in magnitude to the first quartile. In this case, it is pretty close, which helps us see that the first quartile of residuals on either side of the line is behaving fairly normally. Max   2.2691 “Max” gives the maximum positive residuals, which would ideally would be about equal in magnitude to the minimum residual. In this case, it is much larger than the minimum, which helps us see that the residuals are likely right skewed. Coefficients: Notice that in your glm(…) you used only \\(Y\\) and \\(X\\). You did type out any coefficients, i.e., the \\(\\beta_0\\) or \\(\\beta_1\\) of the regression model. These coefficients are estimated by the glm(…) function and displayed in this part of the output along with standard errors, t-values, and p-values.   Estimate To learn more about the “Estimates” of the “Coefficients” see the “Explanation” tab, “Estimating the Model Parameters” section for details.   Std. Error To learn more about the “Standard Errors” of the “Coefficients” see the “Explanation” tab, “Inference for the Model Parameters” section.   z value The test statistic is a regular old z-score. It is most reliable when the sample size is “large.” It is a measurement of the number of standard errors the estimate is from 0.   Pr(>|z|) This is the p-value, the probability of observing a test statistic more extreme than Z. (Intercept) This always says “Intercept” for any glm(…) you run in R. That is because R always assumes there is a y-intercept for your regression function.   2.630849 This is the estimate of the y-intercept, \\(\\beta_0\\). It is called \\(b_0\\). It is the value of the log of the odds that \\(Y_i=1\\) when \\(x_i\\) is zero. Remember to use \\(e^{b_0}\\) to interpret this values actual effect on the odds.   1.050170 This is the standard error of \\(b_0\\). It tells you how much \\(b_0\\) varies from sample to sample. The closer to zero, the better. 2.505 The test statistic for testing the hypothesis that \\(\\beta_0 = 0\\). 0.01224 This is the p-value of the test of the hypothesis that \\(\\beta_0 = 0\\). It measures the probability of observing a z-score as extreme as the one observed. To compute it yourself in R, use pnorm(-abs(your z-value))*2. * This is called a “star”. One star means significant at the 0.1 level of \\(\\alpha\\). disp This is always the name of your X-variable in your glm(Y ~ X, …).   -0.014604 This is the estimate of the slope, \\(\\beta_1\\). It is called \\(b_1\\). It is the change in the log of the odds that \\(Y_i = 1\\) as X is increased by 1 unit. Remember to use \\(e^{b_1}\\) to compute the actual effect on the odds.   0.005168 This is the standard error of \\(b_1\\). It tells you how much \\(b_1\\) varies from sample to sample. The closer to zero, the better. -2.826 This is the test statistic for testing the hypothesis that \\(\\beta_1 = 0\\). 0.00471 This is the p-value of the test of the hypothesis that \\(\\beta_1 = 0\\). To compute it yourself in R, use pnorm(-abs(your z-value))*2 ** This is called a “star”. Three stars means significant at the 0.001 level of \\(\\alpha\\). --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ’*’ 0.05 ‘.’ 0.1 ‘ ’ 1 These “codes” explain what significance level the p-value is smaller than based on how many “stars” * the p-value is labeled with in the Coefficients table above. (Dispersion parameter for bino"},{"title":"Making Inference","url":"MakingInference.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Making Inference function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } It is common to only have a sample of data from some population of interest. Using the information from the sample to reach conclusions about the population is called making inference. When statistical inference is performed properly, the conclusions about the population are almost always correct. Hypothesis Testing One of the great focal points of statistics concerns hypothesis testing. Science generally agrees upon the principle that truth must be uncovered by the process of elimination. The process begins by establishing a starting assumption, or null hypothesis (\\(H_0\\)). Data is then collected and the evidence against the null hypothesis is measured, typically with the \\(p\\)-value. The \\(p\\)-value becomes small (gets close to zero) when the evidence is extremely different from what would be expected if the null hypothesis were true. When the \\(p\\)-value is below the significance level \\(\\alpha\\) (typically \\(\\alpha=0.05\\)) the null hypothesis is abandoned (rejected) in favor of a competing alternative hypothesis (\\(H_a\\)). Click for an Example The current hypothesis may be that the world is flat. Then someone who thinks otherwise sets sail in a boat, gathers some evidence, and when there is sufficient evidence in the data to disbelieve the current hypothesis, we conclude the world is not flat. In light of this new knowledge, we shift our belief to the next working hypothesis, that the world is round. After a while, someone gathers more evidence and shows that the world is not round, and we move to the next working hypothesis, that it is oblate spheroid, i.e., a sphere that is squashed at its poles and swollen at the equator. This process of elimination is called hypothesis testing. The process begins by establishing a null hypothesis (denoted symbolically by \\(H_0\\)) which represents the current opinion, status quo, or what we will believe if the evidence is not sufficient to suggest otherwise. The alternative hypothesis (denoted symbolically by \\(H_a\\)) designates what we will believe if there is sufficient evidence in the data to discredit, or “reject,” the null hypothesis. See the BYU-I Math 221 Stats Wiki for another example. Managing Decision Errors When the \\(p\\)-value approaches zero, one of two things must be occurring. Either an extremely rare event has happened or the null hypothesis is incorrect. Since the second option, that the null hypothesis is incorrect, is the more plausible option, we reject the null hypothesis in favor of the alternative whenever the \\(p\\)-value is close to zero. It is important to remember that rejecting the null hypothesis could however be a mistake.   \\(H_0\\) True \\(H_0\\) False Reject \\(H_0\\) Type I Error Correct Decision Accept \\(H_0\\) Correct Decision Type II Error Type I Error, Significance Level, Confidence and \\(\\alpha\\) A Type I Error is defined as rejecting the null hypothesis when it is actually true. (Throwing away truth.) The significance level, \\(\\alpha\\), of a hypothesis test controls the probability of a Type I Error. The typical value of \\(\\alpha = 0.05\\) came from tradition and is a somewhat arbitrary value. Any value from 0 to 1 could be used for \\(\\alpha\\). When deciding on the level of \\(\\alpha\\) for a particular study it is important to remember that as \\(\\alpha\\) increases, the probability of a Type I Error increases, and the probability of a Type II Error decreases. When \\(\\alpha\\) gets smaller, the probability of a Type I Error gets smaller, while the probability of a Type II Error increases. Confidence is defined as \\(1-\\alpha\\) or the opposite of a Type I error. That is the probability of accepting the NULL when it is in fact true. Type II Errors, \\(\\beta\\), and Power It is also possible to make a Type II Error, which is defined as failing to reject the null hypothesis when it is actually false. (Failing to move to truth.) The probability of a Type II Error, \\(\\beta\\), is often unknown. However, practitioners often make an assumption about a detectable difference that is desired which then allows \\(\\beta\\) to be prescribed much like \\(\\alpha\\). In essence, the detectable difference prescribes a fixed value for \\(H_a\\). We can then talk about the power of of a hypothesis test, which is 1 minus the probability of a Type II Error, \\(\\beta\\). See Statistical Power in Wikipedia for a starting source if your are interested. This website provides a novel interactive visualization to help you understand power. It does require a little background on Cohen’s D. Sufficient Evidence Statistics comes in to play with hypothesis testing by defining the phrase “sufficient evidence.” When there is “sufficient evidence” in the data, the null hypothesis is rejected and the alternative hypothesis becomes the working hypothesis. There are many statistical approaches to this problem of measuring the significance of evidence, but in almost all cases, the final measurement of evidence is given by the \\(p\\)-value of the hypothesis test. The \\(p\\)-value of a test is defined as the probability of the evidence being as extreme or more extreme than what was observed assuming the null hypothesis is true. This is an interesting phrase that is at first difficult to understand. The “as extreme or more extreme” part of the definition of the \\(p\\)-value comes from the idea that the null hypothesis will be rejected when the evidence in the data is extremely inconsistent with the null hypothesis. If the data is not extremely different from what we would expect under the null hypothesis, then we will continue to believe the null hypothesis. Although, it is worth emphasizing that this does not prove the null hypothesis to be true. Evidence not Proof Hypothesis testing allows us a formal way to decide if we should “conclude the alternative” or “continue to accept the null.” It is important to remember that statistics (and science) cannot prove anything, just show evidence towards. Thus we never really prove a hypothesis is true, we simply show evidence towards or against a hypothesis. Calculating the \\(p\\)-Value Recall that the \\(p\\)-value measures how extremely the data (the evidence) differs from what is expected under the null hypothesis. Small \\(p\\)-values lead us to discard (reject) the null hypothesis. A \\(p\\)-value can be calculated whenever we have two things. A test statistic, which is a way of measuring how “far” the observed data is from what is expected under the null hypothesis. The sampling distribution of the test statistic, which is the theoretical distribution of the test statistic over all possible samples, assuming the null hypothesis was true. Visit the Math 221 textbook for an explanation. A distribution describes how data is spread out. When we know the shape of a distribution, we know which values are possible, but more importantly which values are most plausible (likely) and which are the least plausible (unlikely). The \\(p\\)-value uses the sampling distribution of the test statistic to measure the probability of the observed test statistic being as extreme or more extreme than the one observed. All \\(p\\)-value computation methods can be classified into two broad categories, parametric methods and nonparametric methods. Parametric Methods Parametric methods assume that, under the null hypothesis, the test statistic follows a specific theoretical parametric distribution. Parametric methods are typically more statistically powerful than nonparametric methods, but necessarily force more assumptions on the data. Parametric distributions are theoretical distributions that can be described by a mathematical function. There are many theoretical distributions. (See the List of Probability Distributions in Wikipedia for details.) Four of the most widely used parametric distributions are: The Normal Distribution Click for Details One of the most important distributions in statistics is the normal distribution. It is a theoretical distribution that approximates the distributions of many real life data distributions, like heights of people, heights of corn plants, baseball batting averages, lengths of gestational periods for many species including humans, and so on. More importantly, the sampling distribution of the sample mean \\(\\bar{x}\\) is normally distributed in two important scenarios. The parent population is normally distributed. The sample size is sufficiently large. (Often \\(n\\geq 30\\) is sufficient, but this is a general rule of thumb that is sometimes insufficient.) Mathematical Formula \\[ f(x | \\mu,\\sigma) = \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} \\] The symbols \\(\\mu\\) and \\(\\sigma\\) are the two parameters of this distribution. The parameter \\(\\mu\\) controls the center, or mean of the distribution. The parameter \\(\\sigma\\) controls the spread, or standard deviation of the distribution. Graphical Form Comments The usefulness of the normal distribu"},{"title":"Numerical Summaries","url":"NumericalSummaries.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Numerical Summaries function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } There are many ways to numerically summarize data. The fundamental idea is to describe the center, or most probable values of the data, as well as the spread, or the possible values of the data. Mean \\[ \\bar{x} = \\frac{\\sum_{i=1}^n x_i}{n} \\] Measure of Center | 1 Quantitative Variable Overview The “balance point” or “center of mass” of quantitative data. It is calculated by taking the numerical sum of the values divided by the number of values. Typically used in tandem with the standard deviation. Most appropriate for describing the most typical values for relatively normally distributed data. Influenced by outliers, so it is not appropriate for describing strongly skewed data. R Instructions To calculate a mean in R use the code: mean(object) object must be a quantitative variable, what R calls a “numeric vector.” Usually this is a column from a data set. Use na.rm=TRUE if there are missing values in object so that the code reads mean(object, na.rm=TRUE). Example Code Hover your mouse over the example codes to learn more. mean “mean” is an R function used to calculate the mean of data. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. $ The $ allows us to access any variable from the airquality dataset. Temp “Temp” is a quantitative variable (numeric vector) from the “airquality” dataset. )Closing parenthsis for the mean function.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  …  Click to View Output. ## [1] 77.88235 Note that the single number showing above is the average Temp from the airquality dataset. library(tidyverse) tidyverse is an R Package that is very useful for working with data. airquality airquality is a dataset in R.  %>%  The pipe operator that will send the airquality dataset down inside of the code on the following line.    group_by( “group_by” is a function from library(tidyverse) that allows us to split the airquality dataset into “little” datasets, one dataset for each value in the “Month” column. Month “Month” is a column from the airquality dataset that can be treated as qualitative. ) Functions must always end with a closing parenthesis.  %>%  The pipe operator that will send the grouped version of the airquality dataset down inside of the code on the following line.    summarise( “summarise” is a function from library(tidyverse) that allows us to compute numerical summaries on data. aveTemp =  “AveTemp” is just a name we made up. It will contain the results of the mean(…) function. mean( “mean” is an R function used to calculate the mean. Temp Temp is a quantitative variable (numeric vector) from the airquality dataset. ) Functions must always end with a closing parenthesis. ) Functions must always end with a closing parenthesis.     Press Enter to run the code.  …  Click to View Output. Month aveTemp 5 65.55 6 79.1 7 83.9 8 83.97 9 76.9 Note that R calculated the mean Temp for each month in Month from the airquality dataset. May (5), June (6), July (7), August (8), and September (9), respectively. Further, note that to get the “nicely formatted” table, you would have to use library(pander) airquality %>% group_by(Month) %>% summarise(aveTemp = mean(Temp)) %>% pander() A note about missing values in data… mean “mean” is an R function used to calculate the mean of data. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. $ The $ allows us to access any variable from the airquality dataset. Ozone “Ozone” is a quantitative variable (numeric vector) from the “airquality” dataset. ,  The comma allows us to specify optional commands. na.rm=TRUE Missing values are called “NA” in R. If data contains missing values, mean(...) will give “NA” as the result unless we “remove” (rm) the “NA” (na) values. )Closing parenthsis for the mean function.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  …  Click to View Output. ## [1] 42.12931 Note that the single number showing above is the average Ozone from the airquality dataset. Because the Ozone column had missing values, we had to use the option na.rm=TRUE to get the mean to calculate. If we had left it off, we would have gotten an “NA” result: mean(airquality$Ozone) ## [1] NA Explanation The mathematical formula used to compute the mean of data is given by the formula to the left. Although the formula looks complicated, all it states is “add all the data values up and divide by the total number of values.” Read on to learn what all the symbols in the formula represent. Symbols in the Formula \\(\\bar{x}\\) is read “x-bar” and is the symbol typically used for the sample mean, the mean computed on a sample of data from a population. \\(\\Sigma\\), the capital Greek letter “sigma,” is the symbol used to imply “add all of the data values up.” The \\(x_i\\)’s are the data values. The \\(i\\) in the \\(x_i\\) is stated to go from \\(i=1\\) all the way up to \\(n\\). In other words, data value 1 is represented by \\(x_1\\), data value 2: \\(x_2\\), \\(\\ldots\\), up through the last data value \\(x_n\\). In general, we just write \\(x_i\\). \\(n\\) represents the sample size, or number of data values. Population Mean When all of the data from a population is available, the population mean is calculated instead of the sample mean. The mathematical formula for the population mean is the same as the formula for the sample mean, but is written with slightly different notation. \\[ \\mu = \\frac{\\sum_{i=1}^N x_i}{N} \\] Notice that the symbol for the population mean is \\(\\mu\\), pronounced “mew,” another Greek letter. (Review your Greek alphabet.) The only other difference between the two formulas is that the sample mean uses a sample of data, denoted by \\(n\\), while the population mean uses all the population data, denoted by \\(N\\). Physical Interpretation The mean is sometimes described as the “balance point” of the data. The following example will demonstrate. Say there are \\(n=5\\) data points with the following values. \\(x_1 = 2\\) \\(x_2 = 5\\) \\(x_3 = 6\\) \\(x_4 = 7\\) \\(x_5 = 10\\) The sample mean is calculated as follows. \\[ \\bar{x} = \\frac{\\sum_{i=1}^n x_i}{n} = \\frac{2 + 5 + 6 + 7 + 10}{5} = 6 \\] If these values were plotted, and an “infinitely thin bar” connected the points, then the bar would “balance” at the mean (the triangle) as shown below. Middle of the Deviations The above plot demonstrates that there are equal, but opposite, “sums of deviations” to either side of the mean. Note that a deviation is defined as the distance from the mean to a given point. Thus, \\(x_1\\) has a deviation of -4 from the mean, \\(x_2\\) a deviation of -1, \\(x_3\\) a deviation of 0, \\(x_4\\) a deviation of 1, and \\(x_5\\) a deviation of 4. To the left there is a sum of deviations equal to -5 and on the right, a sum of deviations equal to 5. This can be verified to hold for any scenario. Effect of Outliers The mean can be strongly influenced by outliers, points that deviate abnormally from the mean. This is shown below by changing \\(x_5\\) to be 20. Note that the deviation of \\(x_5\\) is 12, and the sum of deviations to the left of the mean (\\(\\bar{x}=8\\)) is \\(-1 + -2 + -3 + -6 = -12\\). The mean of the altered data \\(x_1 = 2\\) \\(x_2 = 5\\) \\(x_3 = 6\\) \\(x_4 = 7\\) \\(x_5 = 20\\) is now \\(\\bar{x} = \\frac{\\sum_{i=1}^n x_i}{n} = \\frac{2 + 5 + 6 + 7 + 20}{5} = 8\\). Median \\[ \\frac{x_{(n/2)}+x_{(n/2+1)}}{2} \\] \\(\\uparrow\\) even \\(n\\) odd \\(\\downarrow\\) \\[ x_{((n+1)/2)} \\] Measure of Center | 1 Quantitative Variable Overview The “middle data point,” i.e., the 50\\(^{th}\\) percentile. Half of the data is below the median and half is above the median. Typically used in tandem with the five-number summary to describe skewed data because it is not heavily influenced by outliers, i.e., it is robust. Can also be used with normally distributed data, but the mean and standard deviation are more useful measures in such cases. R Instructions To calculate a median in R use the code: median(object) object must be a quantitative variable, what R calls a “numeric vector.” Example Code median “median” is an R function used to calculate the median of data. ( Parenthesis to begin the function. Must touch the last letter of the function. airquality “airquality” is a dataset. Type “View(airquality)” in R to see it. $ The $ allows us to access any variable from the airquality dataset. Temp “Temp” is a quantitative variable (numeric vector) from the “airquality” dataset. )Closing parenthsis for the median function.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  …  Click to View Output. ## [1] 79 Note that the single number showing above is the median Temp from the airq"},{"title":"Intermediate Statistics Notes","url":"Paige-sNotes.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Code Show All Code Hide All Code Intermediate Statistics Notes (MATH 325) function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } function openTab(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } Cheat Sheets R Colors RStudio Cheat Sheets R Base Commands Cheat Sheet Keyboard Shortcuts Don’t forget to always load your libraries and to Knit often!! library(mosaic) library(tidyverse) library(pander) library(DT) library(ggrepel) library(plotly) library(dplyr) library(ggplot2) library(maps) library(tmap) library(leaflet) library(htmltools) library(car) library(mosaicData) library(ResourceSelection) library(reshape2) library(RColorBrewer) library(scatterplot3d) library(readr) library(prettydoc) library(knitr) library(kableExtra) library(formattable) library(haven) This is the templet for the Hover Box Thingy Hover over words box! [insert description here]       …  Click to View Output. There are three parts to the help box: The starter code < a href=“javascript:showhide(‘[Insert classifying name]’)”> < div class=“hoverchunk” > The description code This is the pattern of the reoccurring code that you need to look out for when writing in the help box descriptions! < span class=“tooltipr” > [What shows up in the box] < span class=“tooltiprtext” > [The description that shows up when you hover] < /span>< /span > The ending code the r chunk you put right after will then show up after you click the help box! & nbsp;& nbsp;& nbsp;& nbsp; < span class=“tooltiprtext” >Press Enter to run the code. < /span> & nbsp;…& nbsp; < span class=“tooltiprtext” >Click to View Output.< /span > < /span > < /div > < /a > < div id=“[The classifying name that you put in the starter code!]” style=“display:none;” > *When using, make sure you fix all the spaces when using and use “< /div >” to show where the drop down is meant to end! Personal Notes OoOoooOOOoo let’s go assignments!! Weekly Assignments The sections below show the different Skill Quizzes and Class Activities done throughout the semester. As well as some personal notes on those assignments! Week 1 | Welcome to the Course & Introduction to RStudio We were setting up RStudio and doing cool little graphic thingys! Skill Quiz - Introduction to R Look at data sets, computing means, and creating graphs. Mean of Distance from “cars” data set View(cars) mean(cars$dist) ## [1] 42.98 Scatter plot of “cars” data set plot(dist~speed, data=cars, col=\"skyblue\",pch=16) Creating new data set with “<- The Assignment Operator” create an airquality2 data set that is a copy of the airquality data set add a new column to the airquality2 data set called “Celcius” that converts Temp from degrees Fahrenheit (F) to Ceclcius (C) using the equation: Celcius = (Temp − 32) * 5/9. Don’t forget to use airquailty$ appropriately in that equation! Hint: Typing “?airquality” will allow a help file for the airquality data set to appear! write.csv(airquality,\"C:/Users/paige/OneDrive/Documents/Fall Semester 2024/MATH 325/Statistics-Notebook-master/Data/airquality.cvs\") airquality2 <- airquality airquality2$Celcius <- round((airquality2$Temp-32)*5/9,1) View(airquality2) datatable(airquality2, options=list(lengthMenu =c(3,10,30)), extensions=\"Responsive\") {\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Responsive\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\"],[41,36,12,18,null,28,23,19,8,null,7,16,11,14,18,14,34,6,30,11,1,11,4,32,null,null,null,23,45,115,37,null,null,null,null,null,null,29,null,71,39,null,null,23,null,null,21,37,20,12,13,null,null,null,null,null,null,null,null,null,null,135,49,32,null,64,40,77,97,97,85,null,10,27,null,7,48,35,61,79,63,16,null,null,80,108,20,52,82,50,64,59,39,9,16,78,35,66,122,89,110,null,null,44,28,65,null,22,59,23,31,44,21,9,null,45,168,73,null,76,118,84,85,96,78,73,91,47,32,20,23,21,24,44,21,28,9,13,46,18,13,24,16,13,23,36,7,14,30,null,14,18,20],[190,118,149,313,null,null,299,99,19,194,null,256,290,274,65,334,307,78,322,44,8,320,25,92,66,266,null,13,252,223,279,286,287,242,186,220,264,127,273,291,323,259,250,148,332,322,191,284,37,120,137,150,59,91,250,135,127,47,98,31,138,269,248,236,101,175,314,276,267,272,175,139,264,175,291,48,260,274,285,187,220,7,258,295,294,223,81,82,213,275,253,254,83,24,77,null,null,null,255,229,207,222,137,192,273,157,64,71,51,115,244,190,259,36,255,212,238,215,153,203,225,237,188,167,197,183,189,95,92,252,220,230,259,236,259,238,24,112,237,224,27,238,201,238,14,139,49,20,193,145,191,131,223],[7.4,8,12.6,11.5,14.3,14.9,8.6,13.8,20.1,8.6,6.9,9.699999999999999,9.199999999999999,10.9,13.2,11.5,12,18.4,11.5,9.699999999999999,9.699999999999999,16.6,9.699999999999999,12,16.6,14.9,8,12,14.9,5.7,7.4,8.6,9.699999999999999,16.1,9.199999999999999,8.6,14.3,9.699999999999999,6.9,13.8,11.5,10.9,9.199999999999999,8,13.8,11.5,14.9,20.7,9.199999999999999,11.5,10.3,6.3,1.7,4.6,6.3,8,8,10.3,11.5,14.9,8,4.1,9.199999999999999,9.199999999999999,10.9,4.6,10.9,5.1,6.3,5.7,7.4,8.6,14.3,14.9,14.9,14.3,6.9,10.3,6.3,5.1,11.5,6.9,9.699999999999999,11.5,8.6,8,8.6,12,7.4,7.4,7.4,9.199999999999999,6.9,13.8,7.4,6.9,7.4,4.6,4,10.3,8,8.6,11.5,11.5,11.5,9.699999999999999,11.5,10.3,6.3,7.4,10.9,10.3,15.5,14.3,12.6,9.699999999999999,3.4,8,5.7,9.699999999999999,2.3,6.3,6.3,6.9,5.1,2.8,4.6,7.4,15.5,10.9,10.3,10.9,9.699999999999999,14.9,15.5,6.3,10.9,11.5,6.9,13.8,10.3,10.3,8,12.6,9.199999999999999,10.3,10.3,16.6,6.9,13.2,14.3,8,11.5],[67,72,74,62,56,66,65,59,61,69,74,69,66,68,58,64,66,57,68,62,59,73,61,61,57,58,57,67,81,79,76,78,74,67,84,85,79,82,87,90,87,93,92,82,80,79,77,72,65,73,76,77,76,76,76,75,78,73,80,77,83,84,85,81,84,83,83,88,92,92,89,82,73,81,91,80,81,82,84,87,85,74,81,82,86,85,82,86,88,86,83,81,81,81,82,86,85,87,89,90,90,92,86,86,82,80,79,77,79,76,78,78,77,72,75,79,81,86,88,97,94,96,94,91,92,93,93,87,84,80,78,75,73,81,76,77,71,71,78,67,76,68,82,64,71,81,69,63,70,77,75,76,68],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],[19.4,22.2,23.3,16.7,13.3,18.9,18.3,15,16.1,20.6,23.3,20.6,18.9,20,14.4,17.8,18.9,13.9,20,16.7,15,22.8,16.1,16.1,13.9,14.4,13.9,19.4,27.2,26.1,24.4,25.6,23.3,19.4,28.9,29.4,26.1,27.8,30.6,32.2,30.6,33.9,33.3,27.8,26.7,26.1,25,22.2,18.3,22.8,24.4,25,24.4,24.4,24.4,23.9,25.6,22.8,26.7,25,28.3,28.9,29.4,27.2,28.9,28.3,28.3,31.1,33.3,33.3,31.7,27.8,22.8,27.2,32.8,26.7,27.2,27.8,28.9,30.6,29.4,23.3,27.2,27.8,30,29.4,27.8,30,31.1,30,28.3,27.2,27.2,27.2,27.8,30,29.4,30.6,31.7,32.2,32.2,33.3,30,30,27.8,26.7,26.1,25,26.1,24.4,25.6,25.6,25,22.2,23.9,26.1,27.2,30,31.1,36.1,34.4,35.6,34.4,32.8,33.3,33.9,33.9,30.6,28.9,26.7,25.6,23.9,22.8,27.2,24.4,25,21.7,21.7,25.6,19.4,24.4,20,27.8,17.8,21.7,27.2,20.6,17.2,21.1,25,23.9,24.4,20]],\"container\":\"<table class=\\\"display\\\">\\n <thead>\\n <tr>\\n <th> <\\/th>\\n <th>Ozone<\\/th>\\n <th>Solar.R<\\/th>\\n <th>Wind<\\/th>\\n <th>Temp<\\/th>\\n <th>Month<\\/th>\\n <th>Day<\\/th>\\n <th>Celcius<\\/th>\\n <\\/tr>\\n <\\/thead>\\n<\\/table>\",\"options\":{\"lengthMenu\":[3,10,30],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Ozone\",\"targets\":1},{\"name\":\"Solar.R\",\"targets\":2},{\"name\":\"Wind\",\"targets\":3},{\"name\":\"Temp\",\"targets\":4},{\"name\":\"Month\",\"targets\":5},{"},{"title":"Permutation Tests","url":"PermutationTests.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Permutation Tests function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } A nonparametric approach to computing the p-value for any test statistic in just about any scenario. Overview In almost all hypothesis testing scenarios, the null hypothesis can be interpreted as follows. \\(H_0\\): Any pattern that has been witnessed in the sampled data is simply due to random chance. Permutation Tests depend completely on this single idea. If all patterns in the data really are simply due to random chance, then the null hypothesis is true. Further, random re-samples of the data should show similar lack of patterns. However, if the pattern in the data is real, then random re-samples of the data will show very different patterns from the original. Consider the following image. In that image, the toy blocks on the left show a clear pattern or structure. They are nicely organized into colored piles. This suggests a real pattern that is not random. Someone certainly organized those blocks into that pattern. The blocks didn’t land that way by random chance. On the other hand, the pile of toy blocks shown on the right is certainly a random pattern. This is a pattern that would result if the toy blocks were put into a bag, shaken up, and dumped out. This is the idea of the permutation test. If there is structure in the data, then “mixing up the data and dumping it out again” will show very different patterns from the original. However, if the data was just random to begin with, then we would see a similar pattern by “mixing up the data and dumping it out again.” The process of a permutation test is: Compute a test statistic for the original data. Re-sample the data (“shake it up and dump it out”) thousands of times, computing a new test statistic each time, to create a sampling distribution of the test statistic. Compute the p-value of the permutation test as the percentage of test statistics that are as extreme or more extreme than the one originally observed. In review, the sampling distribution is created by permuting (randomly rearranging) the data thousands of times and calculating a test statistic on each permuted version of the data. A histogram of the test statistics then provides the sampling distribution of the test statistic needed to compute the p-value of the original test statistic. R Instructions Any permutation test can be performed in R with a for loop. #Step 1 Compute a test statistic for the original data. myTest <- …perform the initial test… This could be a t.test, wilcox.test, aov, kruskal.test, lm, glm, chisq.test, or any other R code that results in a test statistic. It could even simply be the mean or standard deviation of the data. observedTestStat <- …get the test statistic… Save the test statistic of your test into the object called observedTestStat. For tests that always result in a single test statistic like a t.test, wilcox.test, kruskal.test, and chisq.test it is myTest$statistic. For an aov, lm, or glm try printing summary(myTest)[] to see what values you are interested in using. observedTestStat Print the value of the test statistic of your test to the screen. This is the value that we now need to use to compute the P-value from by finding the probability that a randomly computed test statistic would be “more extreme” than this originally observed value. #Step 2 Re-sample the data (“shake it up and dump it out”) thousands of times, computing a new test statistic each time, to create a sampling distribution of the test statistic. N <- 2000       N is the number of times you will reuse the data to create the sampling distribution of the test statistic. A typical choice is 2000, but sometimes 10000, or 100000 reuses are needed before useful answers can be obtained. permutedTestStats <-  This is a storage container that will be used to store the test statistics from each of the thousands of reuses of the data. rep(NA, N) The rep() function repeats a given value N times. This particular statement repeats NA’s or “missing values” N times. This gives us N “empty” storage spots inside of permutedTestStats that we can use to store the N test statistics from the N reuses of the data we will make in our for loop. for The for loop is a programming tool that lets us tell R to run a certain code over and over again for a certain number of times.  (i in   In R, the for loop must be followed by a space, then an opening parenthesis, then a variable name (in this case the variable is called “i”), then the word “in” then a list of values. 1:N The 1:N gives R the list of values 1, 2, 3, … and so on all the way up to N. These values are passed into i one at a time and the code inside the for loop is performed first for i=1, then again for i=2, then again for i=3 and so on until finally i=N. At that point, the for loop ends. ) Required closing parenthesis on the for (i in 1:N) statement. { This bracket opens the code section of the for loop. Any code placed between the opening { and closing } brackets will be performed over and over again for each value of i=1, i=2, … up through i=N.    Two spaces in front of every line inside of the opening { and closing } brackets helps keep your code organized. permutedTest <- …perform test with permutedData… The same test that was performed on the original data, should be performed again but with randomly permuted data. The easiest way to permute data is with sample(y-variable-name) inside your test. See the Explanation tab for details.    Two spaces in front of every line inside of the opening { and closing } brackets helps keep your code organized. permutedTestStats This is the storage container that was built prior to the for (i in 1:N) code. Inside the for loop, this container is filled value by value using the square brackets [i]. [i] The square brackets [i] allows us to access the “i”th position of permutedTestStats. Remember, since this code is inside of the for loop, i=1 the first time through the code, then i=2 the second time through the code, i=3 the third time through, and so on up until i=N the Nth time through the code.  <- …get test statistic… The test statistic from permutedTest is accessed here and stored into permutedTestStats[i]. } The closing } bracket ends the code that is repeated over and over again inside the for loop. hist(permutedTestStats) Creating a histogram of the sampling distribution of the test statistics obtained from the reused and permuted data allows us to visually compare the observedTestStat to the distribution of test statistics to visually see the percentage of test statistics that are as extreme or more extreme than the observed test statistic value. This is the p-value. abline(v=observedTestStat) This adds the observedTestStat to the distribution of test statistics to visually see the percentage of test statistics that are as extreme or more extreme than the observed test statistic value. This is the p-value. #Step 3 Compute the p-value of the permutation test as the percentage of test statistics that are as extreme or more extreme than the one originally observed. sum(permutedTestStats >= observedTestStat)/N This computes a “greater than” p-value. A two-sided p-value could be obtained by multiplying this value by 2 if the observed test statistic was on the right hand side of the histogram. sum(permutedTestStats <= observedTestStat)/N This computes a “less than” p-value. A two-sided p-value could be obtained by multiplying this value by 2 if the observed test statistic was on the left hand side of the histogram. myTest <- ...perform the initial test... This could be a t.test, wilcox.test, aov, kruskal.test, lm, glm, chisq.test, or any other R code that results in a test statistic. It could even simply be the mean or standard deviation of the data. observedTestStat <- ...get the test statistic... Save the test statistic of your test into the object called observedTestStat. For tests that always result in a single test statistic like a t.test, wilcox.test, kruskal.test, and chisq.test it is myTest$statistic. For an aov, lm, or glm try printing summary(myTest)[] to see what values you are interested in using. N <- 2000 N is the number of times you will reuse the data to create the sampling distribution of the test statistic. A typical choice is 2000, but sometimes 10000, or 100000 reuses are needed before useful answers can be obtained. permutedTestStats <- rep(NA, N) This is a storage container that will be used to store the test statistics from each of the thousands of reuses of the data. The rep() function repeats a given value N times. This particular statement repeats NA’s or “missing values” N times. This gives us N “empty” storage spots inside of permutedTestStats that we can use to store the N test statistics from the N reuses of the data we will make in our for loop. for (i in 1:N)\\{ The for loop is a programming tool that lets us tell R to run a certain code over and over again for a certain number of times. In R, the for loop mu"},{"title":"R Commands","url":"RCommands.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus R Commands function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } “For the things we have to learn before we can do them, we learn by doing them.” ― Aristotle, The Nicomachean Ethics Getting Started Hover your mouse here to begin. Good work! This book requires that you interact with it to learn. Hovering is the first step. Now click right here on these words to get started. ? The Help Command Getting help in R is easy. Usage ?something This command pulls up the help file for whatever you write in the place of something. Examples Click to view. Hover to learn. ? The quick way to access the help function in R. cars The name of a dataset can be typed to open the help file for that dataset.     Press Enter to run the code.  Click to Show Output  Click to View Output. ? The quick way to access the help function in R. data The name of an R function, like data can also be used to open the help file for that function.     Press Enter to run the code.  Click to Show Output  Click to View Output. ? The quick way to access the help function in R. mean The mean function computes the mean of a column of quantitative data. Typing the name of an R function, like mean can also be used to open the help file for that function.     Press Enter to run the code.  Click to Show Output  Click to View Output. $ The Selection Operator Once you have a dataset, you need to be able to access columns from it. Usage DataSetName$ColumnName The $ operator allows you to access the individual columns of a dataset. Tip: think of the data set as a “store” from which you “purchase” a column using “money”: $. Example Code airquality The airqaulity dataset. This could be the name of any dataset instead of airquality. $ Grabs the column, or variable, from the dataset to be used. This is typically used when computing say the mean (or other statistic) of a single column of the data. Wind The name of any column of the dataset can be entered after the dollar sign. In the airquality dataset, this includes: Ozone, Solar.R, Wind, Temp, Month, or Day as shown by View(airquality).     Press Enter to run the code.  Click to Show Output  Click to View Output. This allows you to compute things about that column, like the mean or standard deviation. mean( The mean function computes the mean of a column of quantitative data. airquality The airquality dataset. This could be the name of any dataset instead of airquality. $ Grabs the column, or variable, from the dataset to be used. This is typically used when computing say the mean (or other statistic) of a single column of the data. Wind The name of any column of the dataset can be entered after the dollar sign. In the airquality dataset, this includes: Ozone, Solar.R, Wind, Temp, Month, or Day as shown by View(airquality). ) Closing parenthesis to the mean() function.     Press Enter to run the code.  Click to Show Output  Click to View Output. 9.958 sd( The sd function computes the standard deviation of a column of quantitative data. airquality The airqaulity dataset. This could be the name of any dataset instead of airquality. $ Grabs the column, or variable, from the dataset to be used. This is typically used when computing say the mean (or other statistic) of a single column of the data. Wind The name of any column of the dataset can be entered after the dollar sign. In the airquality dataset, this includes: Ozone, Solar.R, Wind, Temp, Month, or Day as shown by View(airquality). ) Closing parenthesis to the sd() function.     Press Enter to run the code.  Click to Show Output  Click to View Output. 3.523 See Numerical Summaries for more stats functions like mean() and sd(). <- The Assignment Operator Being able to save your work is important! Usage    Keyboard Shortcut: Alt - NameYouCreate <- some R commands <- (Less than symbol < with a hyphen -) is called the assignment operator and lets you store the results of the some R commands into an object called NameYouCreate. NameYouCreate is any name that begins with a letter, but can use numbers, periods, and underscores thereafter. To use spaces in the name, you must use `your Name` encased in back-ticks, but this is not recommended. Example Code cars2 First we name the object we are creating. In this case, we are making a copy of the cars dataset, so it is logical to call it cars2, but it could be bob, c2 or any name you wanted to use. Just be careful to not use names that are already in use!   <-   The <- assignment operator will take whatever is on the right hand side and save it into the name written on the left hand side. cars In this case the cars dataset is being copied to cars2 so that we can change cars2 without changing the original cars dataset.     Press Enter to run the code. cars2 The new copy of the cars dataset that we just created $ftpersec The $ selection operator can be used to create a new column in a dataset when used with the <- assignment operator.  <-  The <- assignment operator will take the results of the right-hand-side and save them into the name on the left-hand-side. cars2$speed * 5280 / 3600 This calculation converts the miles per hour of the cars2 speed column into feet per seconds because there are 5280 feet in a mile and 60 minutes in an hour and 60 seconds in a minute. View(cars2) The cars2 dataset now contains a 3rd column called feetpersec. Compare this to the original cars dataset to see how it changed.  Click to Show Output  Click to View Output. c( ) The Combine Function Think of this function as the “back-pack” function, just like putting different books into one back-pack. Usage c(value 1, value 2, value 3, ... ) The c( ) function combines values into a single object called a “vector”. values 1, 2, 3, ... can be numbers or characters, i.e., words, but must be all of one type or the other. Example Code Classlist <- Classlist is a new object being created using the assignment operator <- that will contain the four names listed above.  c( The combine function c( ) is being used in this case to group character values representing names of students into a single object named “Classlist”. “Jackson”, “Jared”, “Jill”, “Jane”) These are the values we are grouping into the object named Classlist.     Press Enter to run the code. Ages <-   The assignment operator <- is being used to create the object called Ages that will contain the ages of each student on the Classlist. c( The R function “c()” allows us to group together values in order to save them into an object. 8, 9, 7, 8 The values, separated by comma’s, that are being grouped together. In this case, numbers are being grouped together. ) Always close off your functions in R with a closing parathesis.     Press Enter to run the code. Colors <-   The assignment operator <- is being used to create the object called Colors that will have one color for each student on the Classlist. c( The R function “c()” allows us to group together values in order to save them into an object. “red”, “blue”, “green”, “yellow” The values, separated by comma’s, that are being grouped together. In this case, characters are being grouped together. ) Always close off your functions in R with a closing parathesis.     Press Enter to run the code.  Click to Show Output  Click to View Output. table( ) This is a way to quickly count how many times each value occurs in a column or columns. Usage table(NameOfDataset$columnName) table(NameOfDataset$columnName1, NameOfDataset$columnName2) The table( ) function counts how many times each value in a column of data occurs. NameOfDataset is the ane of a data set, like cars or airquality or KidsFeet. columnName is the name of a column from the data set. columnName1 and columnName2 are two different names of columns from the data set. Example Code speedCounts <-speedCounts is a new object being created using the assignment operator <- that will contain the counts of how many times each “speed” occurs in the cars data set speed column.  table( The table function table( ) is being used in this case to count how many times each speed occurs in the cars data set speed column. cars This is the name of the data set. $ The $ is used to access a given column from the data set. speed This is the name of the column we are interested in from the cars data set. ) Always close off your functions in R with a closing parathesis. speedCounts Typing the name of an object will print the results to the screen.     Press Enter to run the code.  Click to Show Output  Click to View Output. ## ## 4 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 ## 2 2 1 1 3 2 4 4 4 3 2 3 4 3 5 1 ## 23 24 25 ## 1 4 1 Notice how the speed of “4” occurs 2 times, same for the speed of 7, but the speed of 8 only occurs 1 time and so on with the other speeds. The first row of the output is the value from the speed column. The number on the second line shows how many times that value occurred in the speed column. library(mosaic) library(mosaic) is needed to access the KidsFeet data set that is used in this examp"},{"title":"","url":"README.html","content":" Statistics Notebook R Help R Commands R Markdown Hints R Cheatsheets & Notes Data Sources Describing Data Graphical Summaries Numerical Summaries Making Inference Making Inference t Tests Wilcoxon Tests ANOVA Kruskal-Wallis Linear Regression Logistic Regression Chi Squared Tests Randomization Testing Analyses Analysis Rubric Good Example Analysis Poor Example Analysis Rent Analysis Stephanie Analysis Statistics-Notebook This began as the textbook for Intermediate Statistics (Math 325) at BYU-Idaho. It aims to become a personal notebook for performing and interpreting statistical analyses in R. // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.header').parent('thead').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })(); "},{"title":"R Markdown Hints","url":"RMarkdownHints.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus R Markdown Hints Think of an R Markdown File, or Rmd for short, as a command center. You write commands, then Knit the file, and an html output file is created according to your commands. Overview Click Here to Learn More Carefully read through all parts of this image to learn… Close The above tabs (blue bottons that read “Click Here to Learn More” and “Close”) were created with the code: ## {.tabset .tabset-pills .tabset-fade} ### Click Here to Learn More Carefully read through all parts of this image to learn... ![](./Images/Rmd2html.png) ### Close ## Creating Links To make a link use the code [Name of Link](addressForLink). Linking to parts of your textbook: [Numerical Summaries](NumericalSummaries.html) becomes Numerical Summaries [Boxplots](GraphicalSummaries.html#boxplots) becomes Boxplots [R Commands](RCommands.html) becomes R Commands Linking to outside resources: [R Colors](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) becomes R Colors Creating Headers There are six available sizes of headings you can use in an Rmd file (left in image) that show up as shown below (right in image). Emphasizing Words To italisize a word use the asterisk (Shift 8) *italisize*. To bold a word use the double asterisk **bold**. The back tic can be used tohighlightwords by placing back tics on each side of a word: highlight `. Bullet Points Simple Lists To achieve the result: This is the first item. This is the second. This is the third. Use the code: To achieve the result: * This is the first item. * This is the second. * This is the third. Numbered Lists To achieve the result: This is the first item. This is the second. This is the third. Use the code: To achieve the result: 1. This is the first item. 2. This is the second. 3. This is the third. Lettered Lists To achieve the result: This is the first item. This is the second. This is the third. Use the code: To achieve the result: A) This is the first item. B) This is the second. C) This is the third. Nested Lists What is \\(2+2\\)? 4 8 What is \\(3\\times5\\)? 14 15 1. What is $2+2$? a. **4** b. 8 2. What is $3\\times5$? a. 14 b. **15** Math Equations Use the dollar signs $x=5$ to write \\(x=5\\) or $z=\\frac{x-\\mu}{\\sigma}$ to write \\(z=\\frac{x-\\mu}{\\sigma}\\). For a nicely centered equation use the double dollar signs $$ $$ on separate lines $$ z = \\frac{\\bar{x}-\\mu}{\\frac{\\sigma}{\\sqrt{n}}} $$ to get \\[ z = \\frac{\\bar{x}-\\mu}{\\frac{\\sigma}{\\sqrt{n}}} \\] Or $$ H_0: \\mu_\\text{Group 1} = \\mu_\\text{Group 2} $$ $$ H_a: \\mu_\\text{Group 1} \\neq \\mu_\\text{Group 2} $$ to get \\[ H_0: \\mu_{\\text{Group 1}} = \\mu_{\\text{Group 2}} \\] \\[ H_a: \\mu_{\\text{Group 1}} \\neq \\mu_{\\text{Group 2}} \\] Symbol list: Symbol LaTeX Math Code \\(\\alpha\\) $\\alpha$ \\(\\beta\\) $\\beta$ \\(\\sigma\\) $\\sigma$ \\(\\epsilon\\) $\\epsilon$ \\(\\bar{x}\\) $\\bar{x}$ \\(\\hat{Y}\\) $\\hat{Y}$ \\(=\\) $=$ \\(\\ne\\) $\\ne$ or $\\neq$ \\(>\\) $>$ \\(<\\) $<$ \\(\\ge\\) $\\ge$ \\(\\le\\) $\\le$ \\(\\{ \\}\\) $\\{ \\}$ \\(\\text{Type just text}\\) $\\text{Type just text}$ \\(\\overbrace{Y_i}^\\text{label}\\) $\\overbrace{Y_i}^\\text{label}$ \\(\\underbrace{Y_i}_\\text{label}\\) $\\underbrace{Y_i}_\\text{label}$ Here is a list of all supported LaTeX commands. Insert a Picture To add a picture to your document, say some notes you took down on paper from class, Use the code: ![](./Images/insertPictureNotes.jpg) to get… Tables There are many ways to make tables in R Markdown. Here is a simple way to make a “pipe” table. | Name | Age | Gender | |---------------|---------------|--------------| | Jill | 8 | Female | | Jack | 9 | Male | Name Age Gender Jill 8 Female Jack 9 Male Themes Notice in the YAML (at the top of the RMD file) there is a line that reads: “theme: cerulean” Other possible themes are “default”, “cerulean”, “journal”, “flatly”, “readable”, “spacelab”, “united”, and “cosmo”. You can also change the highlighting by adding the line “highlight: tango” to the YAML as follows. --- title: \"Markdown Hints\" output: html_document: theme: cerulean highlight: tango --- Other highlighting options are “default”, “tango”, “pygments”, “kate”, “monochrome”, “espresso”, “zenburn”, “haddock”, and “textmate”. More Information Go to the rmarkdown.rstudio.com website for more information on how to use R Markdown. // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); $(document).ready(function () { // temporarily add toc-ignore selector to headers for the consistency with Pandoc $('.unlisted.unnumbered').addClass('toc-ignore') // move toc-ignore selectors from section div to header $('div.section.toc-ignore') .removeClass('toc-ignore') .children('h1,h2,h3,h4,h5').addClass('toc-ignore'); // establish options var options = { selectors: \"h1,h2,h3\", theme: \"bootstrap3\", context: '.toc-content', hashGenerator: function (text) { return text.replace(/[.\\\\/?&!#<>]/g, '').replace(/\\s/g, '_'); }, ignoreSelector: \".toc-ignore\", scrollTo: 0 }; options.showAndHide = true; options.smoothScroll = true; // tocify var toc = $(\"#TOC\").tocify(options).data(\"toc-tocify\"); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })(); "},{"title":"t Tests","url":"tTests.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus t Tests function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } Much of statistical inference concerns the location of the population mean \\(\\mu\\) for a given parametric distribution. Some of the most common approaches to making inference about \\(\\mu\\) utilize a test statistic that follows a t distribution. One Sample t Test A one sample t test is used when there is a hypothesized value for the population mean \\(\\mu\\) of a single quantitative variable. Overview Questions The one sample t test can be used to answer questions like: How long does it take to drive from Rexburg, ID to Salt Lake City, UT on average? Is human body temperature really 98.6&deg; F on average? Do I spend less than $3 a day, on average, purchasing snacks? Requirements This test is only appropriate when both of the following are satisfied. The sample is representative of the population. (Having a simple random sample is the best way to do this.) The sampling distribution of the sample mean \\(\\bar{x}\\) can be assumed to be normal. This is a safe assumption when either (a) the population data can be assumed to be normally distributed using a Q-Q Plot or (b) the size of the sample (n) that was taken from the population is large (at least n > 30, but “large” really depends on how badly the data is skewed). If the requirements listed above are satisfied, then the results of the test can be trusted to give meaningful inference about the population. If the requirements are not met, then that doesn’t mean the results of the test are necessarily bad, but there is no guarantee that they are good. Hypotheses Math Code $$ H_0: \\mu = 5.2 $$ $$ H_a: \\mu \\neq 5.2 $$ \\(H_0: \\mu = \\text{some number}\\) \\(H_a: \\mu \\ \\left\\{\\underset{<}{\\stackrel{>}{\\neq}}\\right\\} \\ \\text{some number}\\) Examples: analysis resubmits R Instructions Console Help Command: ?t.test() t.test(NameOfYourData$Y, mu = YourNull, alternative = YourAlternative, conf.level = 0.95) NameOfYourData is the name of your data set, like mtcars or KidsFeet. Y must be a “numeric” vector of quantitative data. YourNull is the numeric value from your null hypothesis for \\(\\mu\\). YourAlternative is one of the three options: \"two.sided\", \"greater\", \"less\" and should correspond to your alternative hypothesis. The value for conf.level = 0.95 can be changed to any desired confidence level, like 0.90 or 0.99. It should correspond to \\(1-\\alpha\\). Testing Assumptions library(car) qqPlot(NameOfYourData$Y) Example Code Hover your mouse over the example codes to learn more. t.test( ‘t.test’ is an R function that performs one and two sample t-tests. mtcars ‘mtcars’ is a dataset. Type ‘View(mtcars)’ in R to view the dataset. $ The $ allows us to access any variable from the mtcars dataset. mpg,  ‘mpg’ is Y, a quantitative variable (numeric vector) from the mtcars dataset. mu = 20,  The numeric value from the null hypothesis is 20 meaning \\(\\mu=20\\). alternative = “two.sided”,  The alternative hypothesis is “two.sided” meaning the alternative hypothesis is \\(\\mu\\neq20\\). conf.level = 0.95) This test has a 0.95 confidence level which corresponds to 1−α.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  Click to Show Output  Click to View Output. One Sample t-test EXPLANATION. data: mtcars$mpg EXPLANATION. t = 0.08506, EXPLANATION.  df = 31, EXPLANATION.  p-value = 0.9328 EXPLANATION. alternative hypothesis: true mean is not equal to 20 EXPLANATION. 95 percent confidence interval: EXPLANATION.  17.91768 EXPLANATION.  22.26357 EXPLANATION. sample estimates: EXPLANATION. mean of x EXPLANATION.  20.09062 EXPLANATION. qqPlot( ‘qqPlot’ is a R function from library(car) that creates a qqPlot. mtcars ‘mtcars’ is a dataset. Type ‘View(mtcars)’ in R to view the dataset. $ The $ allows us to access any variable from the mtcars dataset. mpg) ‘mpg’ is a quantitative variable (numeric vector) from the mtcars dataset.  Click to Show Output  Click to View Output. ## [1] 20 18 Explanation In many cases where it is of interest to test a claim about a single population mean \\(\\mu\\), the one sample t test is used. This is an appropriate decision whenever the sampling distribution of the sample mean can be assumed to be normal and the data represents a simple random sample from the population. In the figure below, the null hypothesis \\(H_0: \\mu = \\mu_0\\) is represented by the normal distribution (gray) centered at \\(\\mu_0\\). Note that \\(\\mu_0\\) is just some specified number. This shows how the null hypothesis represents the assumption about the center of the distribution of the data. After a hypothesis (null) is established and an alternative hypothesis similarly declared, a simple random sample of data of size \\(n\\) is obtained from the population of interest. In the plot above, this is depicted by the points (blue dots) which are centered around their sample mean \\(\\bar{x}\\). Above the points (blue dots) is shown a second normal distribution (blue dashed line) which represents the idea that the alternative hypothesis allows for a normal distribution which is potentially more consistent with the data than the one specified under the null hypothesis. The role of the one sample t test is to measure the probability of a sample mean being as extreme or more extreme from the hypothesized value of \\(\\mu_0\\) than the one observed assuming the null hypothesis is true. This probability is of course the p-value of the test. This works because the sampling distribution of the sample mean has been assumed to be normal. In this case, the distribution of the test statistic t, \\[ t = \\frac{\\bar{x}-\\mu}{s/\\sqrt{n}} \\] is known to follow a t distribution with \\(n-1\\) degrees of freedom. (The mathematics that provide this result are phenominal! You can consult any advanced statistical textbook for the details.) The p-value of the one sample t test represents the probability that the test statistic \\(t\\) is as extreme or more extreme than the one observed according to a t-distribution with \\(n-1\\) degrees of freedom. If the probability (the p-value) is close enough to zero (smaller than \\(\\alpha\\)) then it is determined that the most plausible hypothesis is the alternative hypothesis, and thus the null is “rejected” in favor of the alternative. Paired Samples t Test The paired samples t test is used when a value is hypothesized for the popluation mean of the differences, \\(\\mu_d\\), obtained from paired observations. Overview Questions The Paired Samples t Test can be used to answer questions like: From pre-test to post-test is there an improvement on average in the subjects? How much taller are husbands than their wives, on average? Do hospital patients that are carefully matched together according to reason for being in the hospital, age, gender, ethnicity, height, and weight show increased stay times in the hospital when infected with a nosocomial infection compared to those who were not infected? Requirements The test is only appropriate when both of the following are satisfied. The sample of differences is representative of the population differences. The sampling distribution of the sample mean of the differences \\(\\bar{d}\\) (\\(\\bar{x}\\) of the differences) can be assumed to be normal. (This second requirement can be assumed to be satisfied when (a) the differences themselves can be assumed to be normal from a Q-Q Plot, or (b) when the sample size \\(n\\) of the differences is large.) Hypotheses Math Code $$ H_0: \\mu_d = 0 $$ $$ H_a: \\mu_d \\neq 0 $$ \\(H_0: \\mu_d = \\text{some number, but typically 0}\\)\\(H_a: \\mu_d \\ \\left\\{\\underset{<}{\\stackrel{>}{\\neq}}\\right\\} \\ \\text{some number, but typically 0}\\) Examples: sleepPaired studentPaired R Instructions Console Help Command: ?t.test() Option 1: t.test(NameOfYourData$Y1, NameOfYourData$Y2, paired = TRUE, mu = YourNull, alternative = YourAlternative, conf.level = 0.95) NameOfYourData is the name of your data set like sleep or mtcars or KidsFeet. Y1 must be a “numeric” vector that represents the quantitative data from the first sample of data. Y2 must be a “numeric” vector that represents the quantitative data from the second sample of data. This vector must be in the same order as the first sample so that the pairing can take place. YourNull is the numeric value from your null hypothesis for \\(\\mu_d\\). YourAlternative is one of the three options: \"two.sided\", \"greater\", \"less\" and should correspond to your alternative hypothesis. The value for conf.level = 0.95 can be changed to any desired confidence level, like 0.90 or 0.99. It should correspond to \\(1-\\alpha\\). Testing Assumptions library(car) qqPlot(Y1 - Y2) Example Code Hover your mouse over the example codes to learn more. sleep1 <- filter(sleep, group==1) This splits out the “group1” data from the sleep data set. sleep2 <- filter(sleep, group==2) This splits out the “group2” data from the sleep data set t.test( ‘t.test’ is an R function that performs one and two sample t-tests. sleep2$e"},{"title":"Wilcoxon Tests","url":"WilcoxonTests.html","content":" Statistics Notebook Paige's Notes Intermediate Statistics (MATH 325) Experimental Design (MATH 326) Applied Linear Regression (MATH 425) R Help R Commands R Markdown Hints Data Sources Example Analyses Describing Data Graphical Summaries Numerical Summaries Making Inference Overview t Tests Wilcoxon Tests Kruskal-Wallis Test ANOVA Linear Regression Logistic Regression Chi-Squared Tests Randomization Analyses 325 Analyses Good Example Analysis Poor Example Analysis Rent Stephanie High School Seniors (Independent Samples t-Test) Recalling Words (Wilcoxon Test) My Two-way ANOVA Food (Kruskal-Wallis Test) My Simple Linear Regression Weather (Multiple Linear Regression) My Logistic Regression My Chi-squared Test Testing Center (Consulting Project) 425 Analyses Predicting Rexburg, Idaho Weather Residuals, Sums of Squares, and R-Squared Acura TL Selling Prices Predicting Grades House Selling Prices Outlier Theory Assignment Homework Focus Wilcoxon Tests function showhide(id) { var e = document.getElementById(id); e.style.display = (e.style.display == 'block') ? 'none' : 'block'; } Wilcoxon tests allow for the testing of hypotheses about the value of the the median without assuming the test statistic follows any parametric distribution. They are often seen as nonparametric alternatives to the various t tests. However, they can also be used on ordinal data (data that is not quite quantitative, but is ordered) unlike t tests which require quantitative data. Wilcoxon Signed-Rank Test For testing hypotheses about the value of the median of (1) one sample of quantitative data or (2) one set of differences from paired data. Overview The nonparametric equivalent of the paired-samples t test as well as the one-sample t test. Best for smaller sample sizes where the distribution of the data is not normal. The t test is more appropriate when the data is normal or when the sample size is large. While the test will work in most scenarios it suffers slightly when ties (repeated values) are present in the data. If many ties are present in the data, the test is not appropriate. If only a few ties are present, the test is still appropriate. Hypotheses Originally created to test hypotheses about the value of the median, but works as well for the mean when the distribution of the data is symmetrical. One Sample of Data Math Code $$ H_0: \\text{Median} = \\text{(Some Number)} $$ $$ H_a: \\text{Median} \\neq \\text{(Same Number)} $$ \\(H_0: \\text{Median} = \\text{(Some Number)}\\) \\(H_a: \\text{Median} \\ \\left\\{\\underset{<}{\\stackrel{>}{\\neq}}\\right\\} \\ \\text{(Some Number)}\\) Paired Samples of Data Math Code $$ H_0: \\text{median of differences} = 0 $$ $$ H_a: \\text{median of differences} \\neq 0 $$ \\(H_0: \\text{median of differences} = 0\\) \\(H_a: \\text{median of differences} \\ \\left\\{\\underset{<}{\\stackrel{>}{\\neq}}\\right\\} \\ 0\\) Examples: sleep, CornHeights R Instructions Console Help Command: ?wilcox.test() Paired Data wilcox.test(Y1, Y2, mu = YourNull, alternative = YourAlternative, paired = TRUE, conf.level = 0.95) Y1 must be a “numeric” vector. One set of measurements from the pair. Y2 also a “numeric” vector. Other set of measurements from the pair. YourNull is the numeric value from your null hypothesis for the median of differences from the paired data. Usually zero. YourAlternative is one of the three options: \"two.sided\", \"greater\", \"less\" and should correspond to your alternative hypothesis. The value for conf.level = 0.95 can be changed to any desired confidence level, like 0.90 or 0.99. It should correspond to \\(1-\\alpha\\). Example Code Hover your mouse over the example codes to learn more. wilcox.test( ‘wilcox.test’ is a function for non-parametric one and two sample tests. sleep$extra[sleep$group==1],  The hours of extra sleep that the group had with drug 2. sleep$extra[sleep$group==2],  The hours of extra sleep that the same group had with drug 1. mu = 0,  The numeric value from the null hypothesis for the median of differences from the paired data is 0 meaning the null hypothesis is \\(\\text{median of differences} = 0\\). paired=TRUE,  This command forces a “paired” samples test to be performed. alternative = “two.sided”,  The alternative hypothesis is “two.sided” meaning the alternative hypothesis is \\(\\text{median of differences} \\neq0\\). conf.level = 0.95) This test has a 0.95 confidence level which corresponds to 1 - \\(\\alpha\\).     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  …  Click to View Output. Wilcoxon signed rank test with continuity correction The phrase “with continuity correction” implies that instead of using the “exact” distribution of the test statistic a “normal approximation” was used instead to compute the p-value. Further, a small correction was made to allow for the change from the “discrete” exact distribution to the “continuous normal distribution” when calculating the p-value. data: sleep$extra[sleep$group == 1] and sleep$extra[sleep$group == 2] This statement of the output just reminds you of the code you used to perform the test. The important thing is recognizing that the first group listed is “Group 1” and the second group listed is “Group 2.” This is especially important when using alternative hypotheses of “less” or “greater” as the order is always “Group 1” is “less” than “Group 2” or “Group 1” is “greater” than “Group 2.” V = 0, This is the test statistic of the test, i.e., the sum of the ranks from the positive group minus the minimum sum of ranks possible.  p-value = 0.009091 This is the p-value of the test. If no warning is displayed when the test is run, then this is the “exact” p-value from the non-parametric Wilcoxon Test Statistic distribution. Sometimes a message will appear stating “Cannot compute exact p-value with ties” or other similar messages. In those cases, the p-value is still considered valid even though it is obtained through a normal approximation to the exact distribution. alternative hypothesis: true location shift is not equal to 0 This reports that the alternative hypothesis was “two-sided.” If the alternative had been “less” or “greater” the wording would change accordingly. One Sample wilcox.test(object, mu = YourNull, alternative = YourAlternative, conf.level = 0.95) object must be a “numeric” vector. YourNull is the numeric value from your null hypothesis for the median (even though it says “mu”). YourAlternative is one of the three options: \"two.sided\", \"greater\", \"less\" and should correspond to your alternative hypothesis. The value for conf.level = 0.95 can be changed to any desired confidence level, like 0.90 or 0.99. It should correspond to \\(1-\\alpha\\). Example Code Hover your mouse over the example codes to learn more. wilcox.test( ‘wilcox.test’ is a function for non-parametric one and two sample tests. mtcars ‘mtcars’ is a dataset. Type ‘View(mtcars)’ in R to view the dataset. $ The $ allows us to access any variable from the mtcars dataset. mpg,  ‘mpg’ is a quantitative variable (numeric vector) from the mtcars dataset. mu = 20,  The numeric value from the null hypothesis is 20 meaning \\(\\mu = 20\\). alternative = “two.sided”,  The alternative is “two.sided” meaning the alternative hypothesis is \\(\\mu\\neq20\\). conf.level = 0.95) This test has a 0.95 confidence level which corresponds to 1−α.     Press Enter to run the code if you have typed it in yourself. You can also click here to view the output.  …  Click to View Output. Wilcoxon signed rank test with continuity correction This reports on the type of test performed. The phrase “with continuity correction” implies the normal approximation was used when calculating the p-value of the test. data: mtcars$mpg This print-out reminds us that the mpg column of the mtcars data was used as “Y” in the test. V = 249, The test statistic of the test.  p-value = 0.7863 The p-value of the test. alternative hypothesis: true location is not equal to 20 The words “not equal” tell us this was a two-sided test. Had it been a one-sided test, either the word “less” or the word “greater” would have appeared instead of “not equal.” Explanation In many cases it is of interest to perform a hypothesis test about the location of the center of a distribution of data. The Wilcoxon Signed Rank Test allows a nonparametric approach to doing this. The Wilcoxon Signed-Rank Test covers two important scenarios. One sample of data from a population. (Not very common.) The differences obtained from paired data. (Very common.) The Wilcoxon methods are most easily explained through examples, beginning with the paired data for which the method was originally created. Scroll down for the One Sample Example if that is what you are really interested in. However, it is still recommended that you read the paired data example first. Paired Data Example Note: the data for this example comes from the original 1945 paper Individual Comparison by Ranking Methods by Frank Wilcoxon. Background Height differences “between cross- and self- fertilized corn plants of the same pair” were collected. The experiment hypothesized that the center of the distribution of the height differences would be zero, with the alternative being that the center was not zero. The result of the data collection was 15 height differences: Differences: 14, 56, 60, 16, 6, 8, -48, 49, 24, 28, 29, 41, -67, 23, 75 Step 1 The first step of the Wilcoxon Signed Rank Test is to order the differences from smallest magnitude to largest magnitude. Negative signs are essentially ignored at this point and only magnitudes of the numbers matter. Sorted Differences: 6, 8, 14, 16, 23, 24, 28, 29, 41, -48, 49, 56, 60, -67, 75 Step 2 The next step is to rank the ordered values. Negative signs are attached to the ranks corresponding to negative numbers.   Differences: 6 8 14 16 23 24 28 29 41 -48 49 56 60 -67 75 Ranks: 1 2 3 4 5 6 7 8 9 -10 11 12 13 -14 15 Note that the ranks will always be of the form \\(1, 2, \\ldots, n\\). In this case, \\(n=15\\). S"}]
